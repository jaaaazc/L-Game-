Morph subclass: #Celda	instanceVariableNames: ''	classVariableNames: ''	package: 'L-Game'!!Celda methodsFor: 'as yet unclassified' stamp: 'Anonymous 10/28/2021 19:09'!drawOn: aCanvas| crossHeight crossWidth horizontalBar verticalBar |crossHeight := self height / 3.0 .crossWidth := self width / 3.0 .horizontalBar := self bounds insetBy: 0 @ crossHeight.verticalBar := self bounds insetBy: crossWidth @ 0.aCanvas fillRectangle: horizontalBar color: self color.aCanvas fillRectangle: verticalBar color: self color! !Celda removeSelector: #drawOn:!!Celda methodsFor: 'as yet unclassified' stamp: 'Anonymous 10/28/2021 19:13'!inicializar	super initialize.	self label: ''.	self borderWidth: 1.	bounds := 0 @ 0 corner: 30 @ 30.	self useSquareCorners.! !!Celda methodsFor: 'as yet unclassified' stamp: 'Anonymous 10/28/2021 19:13' prior: 33555073!inicializar	super initialize.	self borderWidth: 1.	bounds := 0 @ 0 corner: 30 @ 30.! !!Celda methodsFor: 'as yet unclassified' stamp: 'Anonymous 10/28/2021 19:13' prior: 33555298!inicializar	self borderWidth: 1.	bounds := 0 @ 0 corner: 30 @ 30.! !Array2D subclass: #PiezaL	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!Array2D subclass: #Tablero	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Tablero methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 20:38'!inicializar	self atAllPut: 0! !Object subclass: #Juego	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 20:52'!iniciar	| tablero |		tablero := Tablero new.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 20:53' prior: 33556027!iniciar	| tablero |		tablero := Tablero new: 4.	tablero atAllPut: 0.	Transcript show: Tablero! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 20:54' prior: 33556172!iniciar	| tablero |	tablero := Tablero new: 4.	tablero atAllPut: 0! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 20:54' prior: 33556358!iniciar	| tablero |	tablero := Tablero new: 4.	tablero atAllPut: 0.	Transcript show: tablero.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 20:58' prior: 33556514!iniciar	| tablero pieza|	tablero := Tablero new: 4.	tablero inicializar.	Transcript show: tablero.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:01'!inicializar	| a b c d |	a := #(2, 1).	a := #(3, 1).	a := #(3, 2).	a := #(3, 3).	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:01' prior: 33556882!inicializar	| a b c d |	a := #(2, 1).	b := #(3, 1).	c := #(3, 2).	d := #(3, 3).	! !Array2D subclass: #PiezaL	instanceVariableNames: 'a b c d'	classVariableNames: ''	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:01' prior: 33557067!inicializar	a := #(2, 1).	b := #(3, 1).	c := #(3, 2).	d := #(3, 3).	! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 21:06' prior: 33556698!iniciar	| tablero pieza|	tablero := Tablero new: 4.	tablero inicializar.	Transcript show: tablero.		pieza := PiezaL new.	pieza inicializar.		tablero at: (pieza a at: 1) at: (pieza a at: 2).	tablero at: (pieza b at: 1) at: (pieza b at: 2).	tablero at: (pieza c at: 1) at: (pieza c at: 2).	tablero at: (pieza d at: 1) at: (pieza d at: 2).! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:06'!a	^a! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:07'!b	^b! !!PiezaL methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 21:07' prior: 33558033!b	^b! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:07'!c	^c! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:08'!d	^d! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 21:09' prior: 33557515!iniciar	| tablero pieza |	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2).	tablero at: (pieza b at: 1) at: (pieza b at: 2).	tablero at: (pieza c at: 1) at: (pieza c at: 2).	tablero at: (pieza d at: 1) at: (pieza d at: 2)! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 21:09' prior: 33558396!iniciar	| tablero pieza |	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:12' prior: 33557354!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).	! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 21:14' prior: 33558800!iniciar	| tablero pieza |	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.		Transcript show: tablero.! !----SNAPSHOT----2021-11-04T21:16:27.206145-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 95!Array2D subclass: #PiezaL	instanceVariableNames: 'a b c d posibles_movimientos'	classVariableNames: ''	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:47' prior: 33559244!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos put: #(1 2 3 7).	posibles_movimientos put: #(3 2 1 5).	posibles_movimientos put: #(5 6 7 3).	posibles_movimientos put: #(7 6 5 1).		posibles_movimientos put: #(2 3 4 8).	posibles_movimientos put: #(4 3 2 6).	posibles_movimientos put: #(6 7 8 4).	posibles_movimientos put: #(8 7 6 2).						! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:52' prior: 33560102!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos put: #(1 2 3 7).	posibles_movimientos put: #(3 2 1 5).	posibles_movimientos put: #(5 6 7 3).	posibles_movimientos put: #(7 6 5 1).		posibles_movimientos put: #(2 3 4 8).	posibles_movimientos put: #(4 3 2 6).	posibles_movimientos put: #(6 7 8 4).	posibles_movimientos put: #(8 7 6 2).		posibles_movimientos put: #(5 6 7 11).	posibles_movimientos put: #(7 6 5 9).	posibles_movimientos put: #(9 10 11 7).	posibles_movimientos put: #(11 10 9 5).		posibles_movimientos put: #(6 7 8 12).	posibles_movimientos put: #(8 7 6 10).	posibles_movimientos put: #(10 11 12 8).	posibles_movimientos put: #(12 11 10 6).		posibles_movimientos put: #(9 10 11 15).	posibles_movimientos put: #(11 10 9 13).	posibles_movimientos put: #(15 14 13 9).	posibles_movimientos put: #(13 14 15 11).						! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:53' prior: 33560646!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos put: #(1 2 3 7).	posibles_movimientos put: #(3 2 1 5).	posibles_movimientos put: #(5 6 7 3).	posibles_movimientos put: #(7 6 5 1).		posibles_movimientos put: #(2 3 4 8).	posibles_movimientos put: #(4 3 2 6).	posibles_movimientos put: #(6 7 8 4).	posibles_movimientos put: #(8 7 6 2).		posibles_movimientos put: #(5 6 7 11).	posibles_movimientos put: #(7 6 5 9).	posibles_movimientos put: #(9 10 11 7).	posibles_movimientos put: #(11 10 9 5).		posibles_movimientos put: #(6 7 8 12).	posibles_movimientos put: #(8 7 6 10).	posibles_movimientos put: #(10 11 12 8).	posibles_movimientos put: #(12 11 10 6).		posibles_movimientos put: #(9 10 11 15).	posibles_movimientos put: #(11 10 9 13).	posibles_movimientos put: #(15 14 13 9).	posibles_movimientos put: #(13 14 15 11).		posibles_movimientos put: #(10 11 12 16).	posibles_movimientos put: #(12 11 10 14).	posibles_movimientos put: #(16 15 14 10).	posibles_movimientos put: #(14 15 16 12).						! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 21:54' prior: 33561690!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos put: #(1 2 3 7).	posibles_movimientos put: #(3 2 1 5).	posibles_movimientos put: #(5 6 7 3).	posibles_movimientos put: #(7 6 5 1).		posibles_movimientos put: #(2 3 4 8).	posibles_movimientos put: #(4 3 2 6).	posibles_movimientos put: #(6 7 8 4).	posibles_movimientos put: #(8 7 6 2).		posibles_movimientos put: #(5 6 7 11).	posibles_movimientos put: #(7 6 5 9).	posibles_movimientos put: #(9 10 11 7).	posibles_movimientos put: #(11 10 9 5).		posibles_movimientos put: #(6 7 8 12).	posibles_movimientos put: #(8 7 6 10).	posibles_movimientos put: #(10 11 12 8).	posibles_movimientos put: #(12 11 10 6).		posibles_movimientos put: #(9 10 11 15).	posibles_movimientos put: #(11 10 9 13).	posibles_movimientos put: #(15 14 13 9).	posibles_movimientos put: #(13 14 15 11).		posibles_movimientos put: #(10 11 12 16).	posibles_movimientos put: #(12 11 10 14).	posibles_movimientos put: #(16 15 14 10).	posibles_movimientos put: #(14 15 16 12).				! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:13' prior: 33562908!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos put: #(1 2 3 7).	posibles_movimientos put: #(3 2 1 5).	posibles_movimientos put: #(5 6 7 3).	posibles_movimientos put: #(7 6 5 1).		posibles_movimientos put: #(2 3 4 8).	posibles_movimientos put: #(4 3 2 6).	posibles_movimientos put: #(6 7 8 4).	posibles_movimientos put: #(8 7 6 2).		posibles_movimientos put: #(5 6 7 11).	posibles_movimientos put: #(7 6 5 9).	posibles_movimientos put: #(9 10 11 7).	posibles_movimientos put: #(11 10 9 5).		posibles_movimientos put: #(6 7 8 12).	posibles_movimientos put: #(8 7 6 10).	posibles_movimientos put: #(10 11 12 8).	posibles_movimientos put: #(12 11 10 6).		posibles_movimientos put: #(9 10 11 15).	posibles_movimientos put: #(11 10 9 13).	posibles_movimientos put: #(15 14 13 9).	posibles_movimientos put: #(13 14 15 11).		posibles_movimientos put: #(10 11 12 16).	posibles_movimientos put: #(12 11 10 14).	posibles_movimientos put: #(16 15 14 10).	posibles_movimientos put: #(14 15 16 12).! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:16' prior: 33564122!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos add: #(1 2 3 7).	posibles_movimientos add: #(3 2 1 5).	posibles_movimientos add: #(5 6 7 3).	posibles_movimientos add: #(7 6 5 1).		posibles_movimientos add: #(2 3 4 8).	posibles_movimientos add: #(4 3 2 6).	posibles_movimientos add: #(6 7 8 4).	posibles_movimientos add: #(8 7 6 2).		posibles_movimientos add: #(5 6 7 11).	posibles_movimientos add: #(7 6 5 9).	posibles_movimientos add: #(9 10 11 7).	posibles_movimientos add: #(11 10 9 5).		posibles_movimientos add: #(6 7 8 12).	posibles_movimientos add: #(8 7 6 10).	posibles_movimientos add: #(10 11 12 8).	posibles_movimientos add: #(12 11 10 6).		posibles_movimientos add: #(9 10 11 15).	posibles_movimientos add: #(11 10 9 13).	posibles_movimientos add: #(15 14 13 9).	posibles_movimientos add: #(13 14 15 11).		posibles_movimientos add: #(10 11 12 16).	posibles_movimientos add: #(12 11 10 14).	posibles_movimientos add: #(16 15 14 10).	posibles_movimientos add: #(14 15 16 12).! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:17'!posibles_movimientos	^posibles_movimientos	! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 22:18' prior: 33559401!iniciar	| tablero pieza |	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.		Transcript show: tablero.! !Object subclass: #Juego	instanceVariableNames: 'pieza'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 22:23' prior: 33566649!iniciar	| tablero |	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.		Transcript show: tablero.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:24'!movimiento: unString		|a b |	b := Array new: 4.	a := unString substrings.	1 to: a size do: [:i|		b at: i put: (a at: i) asInteger	 ].	pieza posibles_movimientos includes: b! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:24' prior: 33567659!movimiento: unString		|a b |	b := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		b at: i put: (a at: i) asInteger	 ].	pieza posibles_movimientos includes: b! !----SNAPSHOT----2021-11-04T22:25:13.595145-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 5347!Object subclass: #Juego	instanceVariableNames: 'pieza movimiento'	classVariableNames: ''	package: 'TPI'!Object subclass: #Juego	instanceVariableNames: 'pieza mov'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 22:26' prior: 33567938!movimiento: unString		|a b |	b := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		b at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: b! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 23:01' prior: 33568530!movimiento: unString		|a b |	b := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		b at: i put: (a at: i) asInteger	 ].	^pieza posibles_movimientos includes: b! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 23:02' prior: 33568811!movimiento: unString		| a b |	b := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		b at: i put: (a at: i) asInteger	 ].	^pieza posibles_movimientos includes: b! !Object subclass: #Juego	instanceVariableNames: 'pieza mov tablero'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:10' prior: 33567209!iniciar	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.		Transcript show: tablero.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 23:16' prior: 33569086!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ]		 ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:17' prior: 33569916!movimiento: unString	| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [ :i | mov_jug at: i put: (a at: i) asInteger ].	mov := pieza posibles_movimientos includes: mov_jug.	mov		ifTrue: [ tablero inicializar.			mov_jug				do: [ :x | 					x = 1						ifTrue: [ tablero at: 1 at: 1 put: 1 ].					x = 2						ifTrue: [ tablero at: 1 at: 2 put: 1 ].					x = 3						ifTrue: [ tablero at: 1 at: 3 put: 1 ].					x = 4						ifTrue: [ tablero at: 1 at: 4 put: 1 ].					x = 5						ifTrue: [ tablero at: 2 at: 1 put: 1 ].					x = 6						ifTrue: [ tablero at: 2 at: 2 put: 1 ].					x = 7						ifTrue: [ tablero at: 2 at: 3 put: 1 ].					x = 8						ifTrue: [ tablero at: 2 at: 4 put: 1 ].					x = 9						ifTrue: [ tablero at: 3 at: 1 put: 1 ].					x = 10						ifTrue: [ tablero at: 3 at: 2 put: 1 ].					x = 11						ifTrue: [ tablero at: 3 at: 3 put: 1 ].					x = 12						ifTrue: [ tablero at: 3 at: 4 put: 1 ].					x = 13						ifTrue: [ tablero at: 4 at: 1 put: 1 ].					x = 14						ifTrue: [ tablero at: 4 at: 2 put: 1 ].					x = 15						ifTrue: [ tablero at: 4 at: 3 put: 1 ].					x = 16						ifTrue: [ tablero at: 4 at: 4 put: 1 ] ] ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:17' prior: 33571179!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ]		 ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:20' prior: 33572457!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			Transcript show: tablero.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.' ]! !----SNAPSHOT----2021-11-04T23:26:18.435145-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 13686!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/4/2021 23:39' prior: 33565327!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		posibles_movimientos := OrderedCollection new.	posibles_movimientos add: #(1 2 3 7).	posibles_movimientos add: #(3 2 1 5).	posibles_movimientos add: #(5 6 7 3).	posibles_movimientos add: #(7 6 5 1).		posibles_movimientos add: #(2 3 4 8).	posibles_movimientos add: #(4 3 2 6).	posibles_movimientos add: #(6 7 8 4).	posibles_movimientos add: #(8 7 6 2).		posibles_movimientos add: #(5 6 7 11).	posibles_movimientos add: #(7 6 5 9).	posibles_movimientos add: #(9 10 11 7).	posibles_movimientos add: #(11 10 9 5).		posibles_movimientos add: #(6 7 8 12).	posibles_movimientos add: #(8 7 6 10).	posibles_movimientos add: #(10 11 12 8).	posibles_movimientos add: #(12 11 10 6).		posibles_movimientos add: #(9 10 11 15).	posibles_movimientos add: #(11 10 9 13).	posibles_movimientos add: #(15 14 13 9).	posibles_movimientos add: #(13 14 15 11).		posibles_movimientos add: #(10 11 12 16).	posibles_movimientos add: #(12 11 10 14).	posibles_movimientos add: #(16 15 14 10).	posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	posibles_movimientos add: #(9 5 1 2).	posibles_movimientos add: #(1 5 9 10).	posibles_movimientos add: #(2 6 10 9).	posibles_movimientos add: #(10 6 2 1).	posibles_movimientos add: #(10 6 2 3).	posibles_movimientos add: #(2 6 10 11).		posibles_movimientos add: #(11 7 3 2).	posibles_movimientos add: #(11 7 3 4).	posibles_movimientos add: #(3 7 11 10).	posibles_movimientos add: #(3 7 11 12).	posibles_movimientos add: #(4 8 12 11).	posibles_movimientos add: #(12 8 4 3).		posibles_movimientos add: #(16 12 8 7).	posibles_movimientos add: #(8 12 16 15).	posibles_movimientos add: #(15 11 7 8).	posibles_movimientos add: #(7 11 15 16).	posibles_movimientos add: #(7 11 15 14).	posibles_movimientos add: #(15 11 7 6).		posibles_movimientos add: #(6 10 14 15).	posibles_movimientos add: #(6 10 14 13).	posibles_movimientos add: #(14 10 6 7).	posibles_movimientos add: #(14 10 6 5).	posibles_movimientos add: #(13 9 5 6).	posibles_movimientos add: #(5 9 13 14).! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:41' prior: 33573720!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !----SNAPSHOT----2021-11-04T23:44:19.192145-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 20565!Object subclass: #Juego	instanceVariableNames: 'pieza mov tablero ronda'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:45' prior: 33569462!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.	Transcript show: 'Numero de ronda: ', ronda.	Transcript show: tablero.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:46' prior: 33579004!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:46' prior: 33579504!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.	pieza := PiezaL new.	pieza inicializar.	tablero at: (pieza a at: 1) at: (pieza a at: 2) put: 1.	tablero at: (pieza b at: 1) at: (pieza b at: 2) put: 1.	tablero at: (pieza c at: 1) at: (pieza c at: 2) put: 1.	tablero at: (pieza d at: 1) at: (pieza d at: 2) put: 1.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:47' prior: 33577410!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda += 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:47' prior: 33580543!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda = ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:48' prior: 33581986!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:52' prior: 33583436!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	(a = nil | a size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr.												^true. ].	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:52' prior: 33584887!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	(a  isNil | a size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr.												^true. ].	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:53' prior: 33586452!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	((a  isNil) | (a size ~= 4)) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr.												^true. ].	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:54' prior: 33588018!movimiento: unString		| a mov_jug |		((unString  isNil) | (unString size ~= 7)) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr.												^true. ].	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:54' prior: 33589588!movimiento: unString		| a mov_jug |		((unString  isNil) | (unString size ~= 7)) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/4/2021 23:57' prior: 33591173!movimiento: unString		| a mov_jug |		unString  ifNil: [ ^'no puede realizar ese movimiento' ].		(unString size ~= 7) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !----SNAPSHOT----2021-11-05T00:00:04.336145-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 24264!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/5/2021 00:03' prior: 33592746!movimiento: unString		| a mov_jug |		(unString size ~= 7) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	mov_jug := Array new: 4.	a := unString substrings.	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/5/2021 00:08' prior: 33594465!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	(unString size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/5/2021 00:09' prior: 33596016!movimiento: unString		| a mov_jug |	mov_jug := Array new: 4.	a := unString substrings.	(a size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	1 to: 4 do: [:i|		mov_jug at: i put: (a at: i) asInteger	 ].	mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !----SNAPSHOT----2021-11-05T00:10:43.154709-03:00 Pharo7.0.5-0-64bit-fd8c156(TPI).image priorSource: 39841!Object subclass: #PiezaL	instanceVariableNames: 'a b c d posibles_movimientos'	classVariableNames: ''	package: 'TPI'!Object subclass: #PiezaL	instanceVariableNames: 'a b c d'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!!PiezaL methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 17:51' prior: 33566516!posibles_movimientos	^Posibles_movimientos	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 17:53' prior: 33575200!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !PiezaL subclass: #Jugador1	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 17:54'!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !PiezaL subclass: #Jugador2	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 17:56'!inicializar	a := #(2 2).	b := #(2 3).	c := #(2 4).	d := #(3 4).! !Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 pieza mov tablero ronda'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 18:00' prior: 33580014!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:03'!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:06'!pedir_movimiento	| movimiento |	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	^movimiento! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:09' prior: 33605762!pedir_movimiento	| movimiento |	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		self conversion_string: movimiento.	! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 18:10'!movimiento	| mov_jug |		mov_jug := self pedir_movimiento.		mov := pieza posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:11' prior: 33605991!pedir_movimiento	| movimiento |	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		^self conversion_string: movimiento.	! !Juego removeSelector: #movimiento:!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 18:13' prior: 33606222!movimiento	| mov_jug |		mov_jug := self pedir_movimiento.		mov := jugador1 posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			ronda := ronda + 1.			Transcript show: 'Numero de ronda: '; show: ronda; cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:14' prior: 33605365!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'no puede realizar ese movimiento'; cr. ^true. ].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:17' prior: 33609244!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^true. ].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !PiezaL removeSelector: #inicializar!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:38'!pedir_movimiento	| movimiento |	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		^self conversion_string: movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:38'!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^true. ].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !Juego removeSelector: #pedir_movimiento!Juego removeSelector: #conversion_string:!Juego removeSelector: #movimiento!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:47'!movimiento_j1: tablero	| mov_jug mov|		mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:48'!recibir_movimiento	jugador1 movimiento_j1: tablero.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 18:49' prior: 33612201!recibir_movimiento	jugador1 movimiento_j1: tablero.! !PiezaL subclass: #Jugador1	instanceVariableNames: 'mov_anterior'	classVariableNames: ''	package: 'TPI'!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:02'!mov_anterior: unMov	mov_anterior := unMov! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:04' prior: 33601907!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		self mov_anterior: #(5 9 10 11).		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:04' prior: 33604209!inicializar	a := #(2 2).	b := #(2 3).	c := #(2 4).	d := #(3 4).		self mov_anterior: #(6 7 8 12).! !PiezaL subclass: #Jugador2	instanceVariableNames: 'mov_anterior'	classVariableNames: ''	package: 'TPI'!!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:06'!mov_anterior: unMov	mov_anterior := unMov! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:06' prior: 33614999!inicializar	a := #(2 2).	b := #(2 3).	c := #(2 4).	d := #(3 4).		self mov_anterior: #(6 7 8 12).! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:07' prior: 33612741!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		self mov_anterior: #(11 10 9 5).		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:16' prior: 33610870!movimiento_j1: elTablero	| mov_jug mov tablero |		mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.			mov_jug do: [:x|					(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ].					(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ].					(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ].					(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ].					(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ].					(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ].					(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ].					(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ].					(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ].					(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ].					(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ].					(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ].					(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ].					(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ].					(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ].					(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1. ].				 ].			Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:17'!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1.]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:18' prior: 33617898!movimiento_j1: elTablero	| mov_jug mov tablero |		mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:19' prior: 33620419!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.	(mov) ifTrue: [ 			Transcript clear.			tablero inicializar.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:24' prior: 33620930!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) ifTrue: [ 			Transcript clear.			tablero inicializar.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ]! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:26' prior: 33621464!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) ifTrue: [ 			Transcript clear.			tablero inicializar.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:32' prior: 33619243!posicionar: mov_jug en: tablero	| i |	i := 1.	mov_jug do: [:x|				(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1.]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:32' prior: 33622620!posicionar: mov_jug en: tablero	mov_jug do: [:x|				(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1.]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:37' prior: 33615640!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		mov_anterior := #(11 10 9 5).		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !Jugador1 removeSelector: #mov_anterior:!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:38'!superposicion: mov_jug en: tablero	| flag |		mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 2) ifTrue: [flag := true]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 2) ifTrue: [flag := true].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 2) ifTrue: [flag := true]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 2) ifTrue: [flag := true]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 2) ifTrue: [flag := true].]].].].].].].].].].].].].].].].].		! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:40' prior: 33623814!posicionar: mov_jug en: tablero	|flag|	flag := true.	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 2) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 2) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 2) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:41' prior: 33622028!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self posicionar: mov_jug en: tablero) ifTrue: [ 			Transcript clear.			tablero inicializar.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:42' prior: 33630486!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self posicionar: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:44' prior: 33627274!superposicion: mov_jug en: tablero	|flag|	flag := true.	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 2) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 2) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 2) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.		! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:44' prior: 33628858!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 1. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 1. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 1. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 1. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 1. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 1. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 1. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 1. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 1. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 1. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 1. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 1. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 1. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 1. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 1. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 1.]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:45' prior: 33631119!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:49'!borar_anterior: mov_jug en: tablero	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 1) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 1) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 1) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 1) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 1) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 1) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 1) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 1) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 1) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 1) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 1) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 1) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 1) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 1) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 1) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 1) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:50'!borrar_anterior: mov_jug en: tablero	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 1) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 1) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 1) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 1) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 1) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 1) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 1) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 1) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 1) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 1) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 1) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 1) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 1) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 1) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 1) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 1) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].].! !Jugador1 removeSelector: #borar_anterior:en:!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:50' prior: 33634542!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borar_anterior: mov_jug en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:50' prior: 33638758!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_jug en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:51' prior: 33639415!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior  en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].		mov_anterior := mov_jug.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:54' prior: 33640073!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 19:59'!movimiento_j2: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ].! !----SNAPSHOT----2021-11-06T19:59:50.155728-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 44593!!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:00'!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: 2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: 2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: 2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: 2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: 2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: 2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: 2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: 2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: 2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: 2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: 2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: 2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: 2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: 2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: 2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: 2.]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:01' prior: 33631728!superposicion: mov_jug en: tablero	|flag|	flag := true.	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 2) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 2) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 2) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 2) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:01'!superposicion: mov_jug en: tablero	|flag|	flag := true.	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 1) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 1) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 1) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 1) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 1) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !Jugador2 removeSelector: #mov_anterior:!!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:02' prior: 33615437!inicializar	a := #(2 2).	b := #(2 3).	c := #(2 4).	d := #(3 4).		mov_anterior := #(6 7 8 12).! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:03'!borrar_anterior: mov_jug en: tablero	mov_jug do: [:x|				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 2) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 2) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 2) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 2) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 2) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 2) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 2) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 2) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 2) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 2) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 2) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 2) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 2) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 2) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 2) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 2) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:05' prior: 33612353!recibir_movimiento	Transcript show: 'Turno del jugador 1. Realize un movimiento.'.	jugador1 movimiento_j1: tablero.		Transcript show: 'Turno del jugador 2. Realize un movimiento.'.	jugador2 movimiento_j2: tablero.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 20:05' prior: 33604498!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:06' prior: 33640737!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^true		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ^false].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:07' prior: 33648583!recibir_movimiento	| bool |		Transcript show: 'Turno del jugador 1. Realize un movimiento.'.	bool := jugador1 movimiento_j1: tablero.		Transcript show: 'Turno del jugador 2. Realize un movimiento.'.	jugador2 movimiento_j2: tablero.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:07' prior: 33649779!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ^true].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:09' prior: 33650455!recibir_movimiento	| bool |	bool := true.	[ bool ] whileTrue: [ 			Transcript show: 'Turno del jugador 1. Realize un movimiento.'.			bool := jugador1 movimiento_j1: tablero.	 ].		bool := true.	[ bool ] whileTrue: [ 			Transcript show: 'Turno del jugador 2. Realize un movimiento.'.			bool := jugador2 movimiento_j1: tablero.	 ].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:10' prior: 33651469!recibir_movimiento	| bool |	bool := true.	[ bool ] whileTrue: [ 			Transcript show: 'Turno del jugador 1. Realize un movimiento.'.			bool := jugador1 movimiento_j1: tablero.	 ].		bool := true.	[ bool ] whileTrue: [ 			Transcript show: 'Turno del jugador 2. Realize un movimiento.'.			bool := jugador2 movimiento_j2: tablero.	 ].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:10' prior: 33641385!movimiento_j2: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'no puede realizar ese movimiento.'; cr. ^true.].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:12' prior: 33650793!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript cr.			Transcript show: 'no puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:16' prior: 33610341!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:17' prior: 33653721!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ ^Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr.].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:19' prior: 33654135!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr.].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:23' prior: 33654549!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].	1 to: 4 do: [:i|		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:25' prior: 33610100!pedir_movimiento		| movimiento |		[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento := self conversion_string: movimiento.	].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:26' prior: 33655382!pedir_movimiento		| movimiento |	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento := self conversion_string: movimiento.	].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:26' prior: 33655697!pedir_movimiento		| movimiento |	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento := self conversion_string: movimiento.	].	^self movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:30' prior: 33656031!pedir_movimiento		| movimiento |	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento := self conversion_string: movimiento.	].	^movimiento.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:33' prior: 33651906!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Turno del jugador 1. Realize un movimiento.'.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		bool := true.	Transcript show: 'Turno del jugador 2. Realize un movimiento.'.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:33' prior: 33656731!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Turno del jugador 1. Realize un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		bool := true.	Transcript show: 'Turno del jugador 2. Realize un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:34' prior: 33653026!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'no puede realizar ese movimiento.'; cr. ^true].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:34' prior: 33652346!movimiento_j2: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'No puede realizar ese movimiento.'; cr. ^true.].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:35' prior: 33657608!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: ';  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 20:35' prior: 33657164!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Turno del jugador 1. Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		bool := true.	Transcript show: 'Turno del jugador 2. Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].! !Object subclass: #Ficha	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:00'!mover_ficha	|var var2|	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('@' '#') lines: #(1) message: 'Que ficha desea mover?'.		 ].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:01' prior: 33659645!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Turno del jugador 1. Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	Transcript show: 'Turno del jugador 2. Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:05' prior: 33660163!mover_ficha	|var var2 pos|	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('@' '#') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					pos := UIManager default request: 'Ingrese la posicion'				]							ifFalse: [ 									pos := UIManager default request: 'Ingrese la posicion'								 ]						].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:06' prior: 33660993!mover_ficha	| var var2 pos |	var := UIManager default		chooseFrom: #('si' 'no')		lines: #(1)		message: 'Desea mover la ficha?'.	var = 1		ifTrue: [ var2 := UIManager default				chooseFrom: #('@' '#')				lines: #(1)				message: 'Que ficha desea mover?'.			var2 = 1				ifTrue: [  ]				ifFalse: [  ].			pos := UIManager default request: 'Ingrese la posicion' ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:07' prior: 33661527!mover_ficha	|var var2 pos|	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('@' '#') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					pos := UIManager default request: 'Ingrese la posicion'				]				ifFalse: [ 					pos := UIManager default request: 'Ingrese la posicion'				]		].! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:09'!movimiento: unaPosicion en: tablero	| x flag |	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].! !Object subclass: #Ficha	instanceVariableNames: 'pos_anterior'	classVariableNames: ''	package: 'TPI'!Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 mov tablero ronda'	classVariableNames: ''	package: 'TPI'!Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 ficha_arr ficha_num mov tablero ronda'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:12' prior: 33648889!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_arr := Ficha new.	ficha_num := Ficha new.		tablero at: 1 at: 1 put: '@'.	tablero at: 4 at: 4 put: '#'.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:13' prior: 33664469!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_arr := Ficha new.	ficha_num := Ficha new.		tablero at: 1 at: 1 put: $@.	tablero at: 4 at: 4 put: $#.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:16' prior: 33665462!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_arr := Ficha new.	ficha_num := Ficha new.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:17' prior: 33661984!mover_ficha	|var var2 pos|	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					pos := UIManager default request: 'Ingrese la posicion'				]				ifFalse: [ 					pos := UIManager default request: 'Ingrese la posicion'				]		].! !Ficha subclass: #Ficha_6	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!Ficha subclass: #Ficha_9	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:19' prior: 33662494!movimiento: unaPosicion en: tablero	| x flag |	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].! !Object subclass: #Ficha	instanceVariableNames: 'pos_anterior depende'	classVariableNames: ''	package: 'TPI'!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:24'!colocar: unaPosicion en: tablero	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: depende. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: depende. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: depende. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: depende. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: depende. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: depende. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: depende. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: depende. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: depende. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: depende. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: depende. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: depende. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: depende. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: depende. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: depende. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: depende.]].].].].].].].].].].].].].].].! !!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:24'!inicializar	depende := 6! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:24'!inicializar	depende := 9! !!ManifestTPI commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!ManifestTPI class methodsFor: 'code-critics' stamp: 'Anonymous 11/6/2021 21:25'!ruleRBTrueFalseDuplicationRuleV1FalsePositive	^ #()! !!ManifestTPI class methodsFor: 'code-critics' stamp: 'Anonymous 11/6/2021 21:25' prior: 33671527!ruleRBTrueFalseDuplicationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Juego #mover_ficha #false)) #'2021-11-06T21:25:17.553728-03:00') )! !Object subclass: #Juego	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 mov tablero ronda'	classVariableNames: ''	package: 'TPI'!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:26' prior: 33666453!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_9 := Ficha new.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:27' prior: 33672056!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 inicializar.	ficha_9 := Ficha new.	ficha_9 inicializar.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !Smalltalk globals removeClassNamed: #AnObsoleteManifestTPI!----SNAPSHOT----2021-11-06T21:32:03.824728-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 87520!!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:34'!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 6) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 6) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 6) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 6) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 6) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 6) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 6) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 6) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 6) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 6) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 6) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 6) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 6) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 6) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 6) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 6) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:34'!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 9) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 9) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 9) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 9) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 9) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 9) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 9) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 9) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 9) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 9) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 9) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 9) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 9) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 9) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 9) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 9) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].! !Object subclass: #Ficha	instanceVariableNames: 'depende'	classVariableNames: ''	package: 'TPI'!Ficha subclass: #Ficha_6	instanceVariableNames: 'pos_anterior '	classVariableNames: ''	package: 'TPI'!Ficha subclass: #Ficha_9	instanceVariableNames: 'pos_anterior '	classVariableNames: ''	package: 'TPI'!!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:37' prior: 33676025!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 9) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 9) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 9) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 9) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 9) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 9) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 9) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 9) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 9) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 9) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 9) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 9) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 9) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 9) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 9) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 9) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].		pos_anterior := 2.! !!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:38' prior: 33674240!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 6) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 6) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 6) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 6) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 6) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 6) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 6) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 6) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 6) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 6) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 6) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 6) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 6) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 6) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 6) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 6) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:38' prior: 33678140!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 9) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 9) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 9) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 9) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 9) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 9) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 9) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 9) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 9) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 9) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 9) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 9) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 9) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 9) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 9) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 9) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].! !Ficha subclass: #Ficha_6	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!Ficha subclass: #Ficha_9	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!Object subclass: #Ficha	instanceVariableNames: 'pos_anterior depende'	classVariableNames: ''	package: 'TPI'!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:39' prior: 33669857!colocar: unaPosicion en: tablero	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: depende. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: depende. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: depende. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: depende. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: depende. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: depende. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: depende. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: depende. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: depende. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: depende. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: depende. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: depende. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: depende. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: depende. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: depende. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: depende.]].].].].].].].].].].].].].].].		pos_anterior := x.		! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:42'!pos_anterior	^pos_anterior! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:44' prior: 33667442!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := UIManager default request: 'Ingrese la posicion'.						bool := ficha_6 movimiento: pos en: tablero.					].					ficha_6 borrar_anterior: ficha_6 pos_anterior en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := UIManager default request: 'Ingrese la posicion'.						bool := ficha_9 movimiento: pos en: tablero.					].					ficha_9 borrar_anterior: ficha_9 pos_anterior en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:49' prior: 33643322!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	mov_jug do: [:x|	arr := #(2 6 9).			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:50' prior: 33644936!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	mov_jug do: [:x|	arr := #(1 6 9).			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1)) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [(arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [(arr includes: (tablero at: 3 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4)) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 21:52' prior: 33673041!iniciar	ronda := 0.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha_6 new.	ficha_6 inicializar.	ficha_9 := Ficha_9 new.	ficha_9 inicializar.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:58' prior: 33686193!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(2 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:58' prior: 33688010!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(1 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1)) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [(arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [(arr includes: (tablero at: 3 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4)) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 21:59' prior: 33690844!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(2 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:00' prior: 33694462!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(2 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:00' prior: 33692661!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(1 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1)) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [(arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [(arr includes: (tablero at: 3 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4)) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:02' prior: 33668156!movimiento: unaPosicion en: tablero	| x flag |	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].		^flag.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:06' prior: 33699921!movimiento: unaPosicion en: tablero	| x flag |	flag := true.	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].		^flag.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:10' prior: 33701534!movimiento: unaPosicion en: tablero	| x flag |	flag := true.	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].! !----SNAPSHOT----2021-11-06T22:10:09.879728-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 119615!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:10' prior: 33703162!movimiento: unaPosicion en: tablero	| x |	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^false].]].].].].].].].].].].].].].].].		^true.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:12' prior: 33685260!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool = true ] whileTrue: [ 						pos := UIManager default request: 'Ingrese la posicion'.						bool := ficha_6 movimiento: pos en: tablero.					].					ficha_6 borrar_anterior: ficha_6 pos_anterior en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool = true ] whileTrue: [ 						pos := UIManager default request: 'Ingrese la posicion'.						bool := ficha_9 movimiento: pos en: tablero.					].					ficha_9 borrar_anterior: ficha_9 pos_anterior en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:15' prior: 33706309!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.					].					ficha_6 borrar_anterior: ficha_6 pos_anterior en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.					].					ficha_9 borrar_anterior: ficha_9 pos_anterior en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:16' prior: 33683863!colocar: unaPosicion en: tablero	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: depende. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: depende. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: depende. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: depende. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: depende. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: depende. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: depende. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: depende. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: depende. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: depende. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: depende. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: depende. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: depende. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: depende. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: depende. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: depende.]].].].].].].].].].].].].].].].		pos_anterior := x.		Transcript clear.		Transcript show: tablero.		! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:17' prior: 33708209!colocar: unaPosicion en: tablero	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: depende. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: depende. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: depende. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: depende. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: depende. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: depende. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: depende. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: depende. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: depende. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: depende. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: depende. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: depende. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: depende. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: depende. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: depende. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: depende.]].].].].].].].].].].].].].].].		pos_anterior := x.		Transcript clear.		Transcript show: tablero; cr.		! !!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:19' prior: 33679962!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 6) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 6) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 6) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 6) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 6) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 6) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 6) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 6) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 6) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 6) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 6) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 6) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 6) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 6) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 6) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 6) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].		Transcript clear.		Transcript show: tablero; cr.		! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:19' prior: 33681763!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 9) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 9) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 9) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 9) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 9) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 9) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 9) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 9) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 9) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 9) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 9) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 9) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 9) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 9) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 9) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 9) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].		Transcript clear.		Transcript show: tablero; cr.! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:22' prior: 33707243!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:24' prior: 33671117!inicializar	depende := 6.	pos_anterior := 1.! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:24' prior: 33671226!inicializar	depende := 9.	pos_anterior := 1.! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:24' prior: 33715722!inicializar	depende := 9.	pos_anterior := 16.! !!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/6/2021 22:25' prior: 33710907!borrar_anterior: posAnterior en: tablero	| x |	x := posAnterior.				(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 6) ifTrue: [ tablero at: 1 at: 1 put: 0]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 6) ifTrue: [tablero at: 1 at: 2 put: 0].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 6) ifTrue: [tablero at: 1 at: 3 put: 0]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 6) ifTrue: [tablero at: 1 at: 4 put: 0]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 6) ifTrue: [tablero at: 2 at: 1 put: 0]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 6) ifTrue: [tablero at: 2 at: 2 put: 0]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 6) ifTrue: [tablero at: 2 at: 3 put: 0]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 6) ifTrue: [tablero at: 2 at: 4 put: 0]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 6) ifTrue: [tablero at: 3 at: 1 put: 0]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 6) ifTrue: [tablero at: 3 at: 2 put: 0]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 6) ifTrue: [tablero at: 3 at: 3 put: 0]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 6) ifTrue: [tablero at: 3 at: 4 put: 0]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 6) ifTrue: [tablero at: 4 at: 1 put: 0]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 6) ifTrue: [tablero at: 4 at: 2 put: 0]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 6) ifTrue: [tablero at: 4 at: 3 put: 0]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 6) ifTrue: [tablero at: 4 at: 4 put: 0].]].].].].].].].].].].].].].].].		! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:25' prior: 33714604!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool = true ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:26' prior: 33717807!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/6/2021 22:27' prior: 33718885!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') lines: #(1) message: 'Desea mover la ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') lines: #(1) message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !----SNAPSHOT----2021-11-06T22:28:04.877728-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 150199!----SNAPSHOT----2021-11-06T22:28:27.780728-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 166505!!Ficha_6 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 01:47' prior: 33716015!borrar_anterior: posAnterior en: tablero		| aux_fila aux_col |aux_fila := (tablero indexOf: 6) x.aux_col := (tablero indexOf: 6) y.tablero at: aux_fila at: aux_col put: 0.! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 01:47' prior: 33712763!borrar_anterior: posAnterior en: tablero		| aux_fila aux_col |aux_fila := (tablero indexOf: 6) x.aux_col := (tablero indexOf: 6) y.tablero at: aux_fila at: aux_col put: 0.! !!Ficha_9 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 01:48' prior: 33721537!borrar_anterior: posAnterior en: tablero		| aux_fila aux_col |aux_fila := (tablero indexOf: 9) x.aux_col := (tablero indexOf: 9) y.tablero at: aux_fila at: aux_col put: 0.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:03' prior: 33660509!recibir_movimiento	| bool |	bool := true.	UIManager default inform: 'TURNO DEL JUGADOR 1'.	Transcript show: 'Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	UIManager default inform: 'TURNO DEL JUGADOR 2'.	Transcript show: 'Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:03' prior: 33722087!recibir_movimiento	| bool |	bool := true.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript show: 'Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript show: 'Realice un movimiento.'; cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:04' prior: 33722629!recibir_movimiento	| bool |	bool := true.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.	! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 02:05' prior: 33719949!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') message: 'Desea mover una ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero.				]		].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:09' prior: 33723173!recibir_movimiento	| bool |	bool := true.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.		ronda := ronda + 1.	! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:10' prior: 33658968!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:10' prior: 33658288!movimiento_j2: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'No puede realizar ese movimiento.'; cr. ^true.].! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 02:11' prior: 33689798!iniciar	ronda := 1.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha_6 new.	ficha_6 inicializar.	ficha_9 := Ficha_9 new.	ficha_9 inicializar.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:12' prior: 33724702!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Numero de ronda: '; show: ronda;  cr.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero.	 ].	self mover_ficha.		ronda := ronda + 1.	! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:14'!movimiento_j1: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !Jugador1 removeSelector: #movimiento_j1:!!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:14'!movimiento_j2: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'No puede realizar ese movimiento.'; cr. ^true.].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:14' prior: 33727506!recibir_movimiento	| bool |	bool := true.	Transcript show: 'Numero de ronda: '; show: ronda;  cr.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.		ronda := ronda + 1.	! !Jugador2 removeSelector: #movimiento_j2:!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:16' prior: 33729489!recibir_movimiento	| bool |	bool := true.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.		ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:17' prior: 33730118!recibir_movimiento	| bool |	bool := true.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:21'!movimiento_j1: elTablero	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !Jugador1 removeSelector: #movimiento_j1:!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:23' prior: 33730647!recibir_movimiento	| bool |	bool := true.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 02:31'!colocar: unaPosicion en: tablero ronda: ronda	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: depende. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: depende. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: depende. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: depende. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: depende. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: depende. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: depende. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: depende. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: depende. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: depende. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: depende. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: depende. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: depende. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: depende. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: depende. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: depende.]].].].].].].].].].].].].].].].		pos_anterior := x.		Transcript clear.		Transcript show: 'Numero de ronda: '; show: ronda; cr.		Transcript show: tablero; cr.		! !Ficha removeSelector: #colocar:en:!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 02:32' prior: 33723643!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') message: 'Desea mover una ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := (UIManager default request: 'Ingrese la posicion') asNumber.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !----SNAPSHOT----2021-11-07T02:34:14.108147-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 166619!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:22'!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ]! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 16:23' prior: 33733895!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default chooseFrom: #('si' 'no') message: 'Desea mover una ficha?'.		(var = 1) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:24' prior: 33735078!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^true.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:25' prior: 33736449!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^pos! !----SNAPSHOT----2021-11-07T16:36:49.89149-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 180454!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:38' prior: 33636916!borrar_anterior: mov_jug en: tablero| fila columna |	1 to: 4 do: [:aux|		fila := (tablero indexOf: 1) x.		columna := (tablero indexOf: 1) y.		tablero at: fila at: columna put: 0.	].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:39' prior: 33646792!borrar_anterior: mov_jug en: tablero| fila columna |	1 to: 4 do: [:aux|		fila := (tablero indexOf: 1) x.		columna := (tablero indexOf: 1) y.		tablero at: fila at: columna put: 0.	].! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 16:40' prior: 33737611!borrar_anterior: mov_jug en: tablero| fila columna |	1 to: 4 do: [:aux|		fila := (tablero indexOf: 2) x.		columna := (tablero indexOf: 2) y.		tablero at: fila at: columna put: 0.	].! !Object subclass: #PiezaL	instanceVariableNames: 'a b c d var_1_2'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:35'!analizar_posibles_mov: tablero	| arreglo y|	y := 1.	arreglo := 	1 to: tablero size do: [:x |		(((tablero at: x) = var_1_2) | ((tablero at: x) = 0)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:35'!posiciones_disponibles: tablero		| arreglo y|	y := 1.	arreglo := 	1 to: tablero size do: [:x |		(((tablero at: x) = var_1_2) | ((tablero at: x) = 0)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:36' prior: 33738606!posiciones_disponibles: tablero		| arreglo y|	y := 1.	arreglo := Array new: 10.	1 to: tablero size do: [:x |		(((tablero at: x) = var_1_2) | ((tablero at: x) = 0)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:38' prior: 33738302!analizar_posibles_mov: tablero	| disponibles |		disponibles := self posiciones_disponibles: tablero.		! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:51'!analizar_inclusion: x en: disponibles sumar: mov_disponibles		| mov_disponibles2 |		mov_disponibles2 := mov_disponibles.		x do: [ :w|				(disponibles includes: w) ifFalse: [ ^false. ]			].		mov_disponibles2 := mov_disponibles2 + 1			! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:51' prior: 33739454!analizar_inclusion: x en: disponibles sumar: mov_disponibles		| mov_disponibles2 |		mov_disponibles2 := mov_disponibles.		x do: [ :w|				(disponibles includes: w) ifFalse: [ ^false. ]			].		^mov_disponibles2 := mov_disponibles2 + 1			! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:52' prior: 33739793!analizar_inclusion: x en: disponibles sumar: mov_disponibles		| mov_disponibles2 |		mov_disponibles2 := mov_disponibles.		x do: [ :w|				(disponibles includes: w) ifFalse: [ ^0. ]			].		^1			! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:52' prior: 33740133!analizar_inclusion: x en: disponibles sumar: mov_disponibles		| mov_disponibles2 |		mov_disponibles2 := mov_disponibles.		x do: [ :w|				(disponibles includes: w) ifFalse: [ ^0 ]			].		^1			! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:54' prior: 33739264!analizar_posibles_mov: tablero	| disponibles mov_disponibles |		disponibles := self posiciones_disponibles: tablero.	mov_disponibles := 0.	Posibles_movimientos do: [ :x |			mov_disponibles := mov_disponibles + self analizar_inclusion: x en: disponibles sumar: mov_disponibles		 ].	^mov_disponibles! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:58' prior: 33731835!recibir_movimiento	| bool posibles_movimientos|	bool := true.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		posibles_movimientos := Jugador1 analizar_posibles_mov: tablero.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:58' prior: 33624993!inicializar	a := #(2 1).	b := #(3 1).	c := #(3 2).	d := #(3 3).		mov_anterior := #(11 10 9 5).	var_1_2 := 1.		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:58' prior: 33646608!inicializar	a := #(2 2).	b := #(2 3).	c := #(2 4).	d := #(3 4).		mov_anterior := #(6 7 8 12).	var_1_2 := 2.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 17:59' prior: 33741129!recibir_movimiento	| bool posibles_movimientos|	bool := true.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.	UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:02' prior: 33744333!recibir_movimiento	| bool posibles_movimientos|	bool := true.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:05' prior: 33738928!posiciones_disponibles: tablero		| arreglo y arr_tab|	y := 1.	arreglo := Array new: 10.	arr_tab := tablero asArray.	1 to: arr_tab size do: [:x |		(((arr_tab at: x) = var_1_2) | ((arr_tab at: x) = 0)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:13' prior: 33746094!posiciones_disponibles: tablero		| arreglo y arr_tab|	y := 1.	arreglo := Array new: 10.	arr_tab := tablero asArray.	1 to: arr_tab size do: [:x |		(((arr_tab at: x) = var_1_2) | ((arr_tab at: x) = 0)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:15' prior: 33740726!analizar_posibles_mov: tablero	| disponibles mov_disponibles |		disponibles := self posiciones_disponibles: tablero.	mov_disponibles := 0.	Posibles_movimientos do: [ :x |			mov_disponibles := mov_disponibles + (self analizar_inclusion: x en: disponibles sumar: mov_disponibles)		 ].	^mov_disponibles! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:16' prior: 33745052!recibir_movimiento	| bool posibles_movimientos|	bool := true.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: 'Cantidad de movimientos posibles: ';posibles_movimientos; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:19' prior: 33747245!recibir_movimiento	| bool posibles_movimientos|	bool := true.	posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: 'Cantidad de movimientos posibles: '; posibles_movimientos; cr.	Transcript show: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:19' prior: 33748367!recibir_movimiento	| bool posibles_movimientos|	bool := true.	posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: 'Cantidad de movimientos posibles: ';show: posibles_movimientos; cr.	Transcript show: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:25'!movimiento_j2: elTablero ronda: ronda posibles_mov: posibles_movs	| mov_jug mov tablero posibles_movis|	posibles_movis := posibles_movs.	tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			posibles_movis := self analizar_posibles_mov: tablero.			Transcript show: 'Cantidad de movimientos posibles: ';show: posibles_movis; cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'No puede realizar ese movimiento.'; cr. ^true.].! !Jugador2 removeSelector: #movimiento_j2:ronda:!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:26' prior: 33749490!recibir_movimiento	| bool posibles_movimientos|	bool := true.	posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: 'Cantidad de movimientos posibles: ';show: posibles_movimientos; cr.	Transcript show: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda posibles_mov: posibles_movimientos.	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:28'!movimiento_j2: elTablero ronda: ronda	| mov_jug mov tablero|		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ Transcript show: 'No puede realizar ese movimiento.'; cr. ^true.].! !Jugador2 removeSelector: #movimiento_j2:ronda:posibles_mov:!!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:29' prior: 33751572!recibir_movimiento	| bool posibles_movimientos|	bool := true.	posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: 'Cantidad de movimientos posibles: ';show: posibles_movimientos; cr.	Transcript show: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].		UIManager default message: 'TURNO DEL JUGADOR 1'.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	! !Object subclass: #PiezaL	instanceVariableNames: 'a b c d var_1_2 mov_disponibles'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:31' prior: 33746840!analizar_posibles_mov: tablero	| disponibles |		disponibles := self posiciones_disponibles: tablero.	mov_disponibles := 0.	Posibles_movimientos do: [ :x |			mov_disponibles := mov_disponibles + (self analizar_inclusion: x en: disponibles sumar: mov_disponibles)		 ].	^mov_disponibles! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:31'!mostrar_mov_disp_ronda	^mov_disponibles! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:40' prior: 33753486!recibir_movimiento	| bool posibles_movimientos|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	UIManager default inform: 'Movimientos disponibles: '; posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	UIManager default inform: 'Movimientos disponibles: '; posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:40' prior: 33755271!recibir_movimiento	| bool posibles_movimientos|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	UIManager default inform: 'Movimientos disponibles: '; inform: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	UIManager default inform: 'Movimientos disponibles: '; inform: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:41' prior: 33756471!recibir_movimiento	| bool posibles_movimientos|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	UIManager default inform: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	UIManager default inform: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:46'!analizar_inclusion: x en: disponibles		x do: [ :w|				(disponibles includes: w) ifFalse: [ ^0 ]			].		^1			! !PiezaL removeSelector: #analizar_inclusion:en:sumar:!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:46' prior: 33754759!analizar_posibles_mov: tablero	| disponibles |		disponibles := self posiciones_disponibles: tablero.	mov_disponibles := 0.	Posibles_movimientos do: [ :x |			mov_disponibles := mov_disponibles + (self analizar_inclusion: x en: disponibles)		 ].	^mov_disponibles! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:47' prior: 33757687!recibir_movimiento	| bool posibles_movimientos|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	UIManager default inform: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	UIManager default inform: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 18:53' prior: 33759080!analizar_posibles_mov: tablero	| disponibles |		disponibles := self posiciones_disponibles: tablero.	mov_disponibles := 0.	Posibles_movimientos do: [ :x |			mov_disponibles := mov_disponibles + (self analizar_inclusion: x en: disponibles)		 ].	^mov_disponibles - 1! !----SNAPSHOT----2021-11-07T18:56:12.49449-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 182679!----SNAPSHOT----2021-11-07T19:07:39.53849-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 206441!----SNAPSHOT----2021-11-07T19:09:04.50949-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 206554!----SNAPSHOT----2021-11-07T19:28:48.23149-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 206667!----SNAPSHOT----2021-11-07T19:29:21.01549-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 206780!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:32'!borrar_anterior: posAnterior en: tablero		| aux_fila aux_col |aux_fila := (tablero indexOf: 6) x.aux_col := (tablero indexOf: 6) y.tablero at: aux_fila at: aux_col put: 0.! !Object subclass: #Ficha	instanceVariableNames: 'pos_anterior valor'	classVariableNames: ''	package: 'TPI'!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:34' prior: 33732448!colocar: unaPosicion en: tablero ronda: ronda	| x |	x := unaPosicion.	(x = 1) ifTrue: [ tablero at: 1 at: 1 put: valor. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: valor. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: valor. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: valor. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: valor. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: valor. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: valor. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: valor. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: valor. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: valor. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: valor. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: valor. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: valor. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: valor. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: valor. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: valor.]].].].].].].].].].].].].].].].		pos_anterior := x.		Transcript clear.		Transcript show: 'Numero de ronda: '; show: ronda; cr.		Transcript show: tablero; cr.		! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:34' prior: 33761516!borrar_anterior: posAnterior en: tablero		| aux_fila aux_col |aux_fila := (tablero indexOf: valor) x.aux_col := (tablero indexOf: valor) y.tablero at: aux_fila at: aux_col put: 0.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:35' prior: 33704839!movimiento: unaPosicion en: tablero	" analiza los lugares vacios en el tablero "	| x |	x := unaPosicion.		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 0) ifTrue: [^false]. ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 0) ifTrue: [^false].  ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1)= 0) ifTrue: [^false]. ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 0) ifTrue: [^false]. ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 0) ifTrue: [^false].]].].].].].].].].].].].].].].].		^true.! !Smalltalk globals removeClassNamed: #AnObsoleteFicha_9!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 19:36' prior: 33726463!iniciar	ronda := 1.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 inicializar.	ficha_9 := Ficha new.	ficha_9 inicializar.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !Smalltalk globals removeClassNamed: #AnObsoleteFicha_6!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:37'!pos_anterior: unaPosicion	pos_anterior := unaPosicion! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:37'!valor: unValor	valor := unValor! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/7/2021 19:38'!valor		^valor! !!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 19:40' prior: 33765143!iniciar	ronda := 1.	tablero := Tablero new: 4.	tablero inicializar.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !----SNAPSHOT----2021-11-07T19:42:39.41254-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 206893!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/7/2021 19:48' prior: 33766575!iniciar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !Smalltalk globals removeClassNamed: #AnObsoleteTablero!----SNAPSHOT----2021-11-07T19:49:45.75754-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 213137!----SNAPSHOT----2021-11-07T19:55:12.04454-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 214385!!Juego methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 16:11' prior: 33735438!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.		 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:36'!mensaje_posibles_movimientos: posibles_movimientos	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Movimientos posibles en la ronda:' contents: posibles_movimientos.	mensaje vanishDelay: 10.	mensaje openInWorld.! !!Juego methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:37' prior: 33759446!recibir_movimiento	| bool posibles_movimientos mensaje|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS. FIN DE PARTIDA. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 mov tablero ronda'	classVariableNames: ''	package: 'TPI'!Smalltalk globals removeClassNamed: #AnObsoleteLGame!(Smalltalk globals at: #Juego) rename: #LGame!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 16:39'!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.		tablero at: (jugador1 a at: 1) at: (jugador1 a at: 2) put: 1.	tablero at: (jugador1 b at: 1) at: (jugador1 b at: 2) put: 1.	tablero at: (jugador1 c at: 1) at: (jugador1 c at: 2) put: 1.	tablero at: (jugador1 d at: 1) at: (jugador1 d at: 2) put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !LGame removeSelector: #iniciar!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:40'!jugar	| bool |	self inicializar.	bool := true.	[ bool ] whileTrue: [ bool := self recibir_movimiento. ].! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:40' prior: 33772955!jugar	| bool |	self inicializar.	bool := true.	Transcript open.	[ bool ] whileTrue: [ bool := self recibir_movimiento. ].! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:48' prior: 33770449!recibir_movimiento	| bool posibles_movimientos mensaje|	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: 'FIN DE PARTIDA. 0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1. GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: 'FIN DE PARTIDA. 0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2. GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 16:51' prior: 33773384!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_j1: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_j2: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !----SNAPSHOT----2021-11-08T17:04:27.008054-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 214498!!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:24' prior: 33737321!borrar_anterior: mov_jug en: tablero	tablero replaceAll: 1 with: 0.! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:24' prior: 33737901!borrar_anterior: mov_jug en: tablero	tablero replaceAll: 2 with: 0.! !----SNAPSHOT----2021-11-08T17:27:57.392054-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 221295!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 17:29' prior: 33771846!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		jugador1 := Jugador1 new.	jugador1 inicializar.		jugador2 := Jugador2 new.	jugador2 inicializar.		ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.		tablero at: (jugador2 a at: 1) at: (jugador2 a at: 2) put: 2.	tablero at: (jugador2 b at: 1) at: (jugador2 b at: 2) put: 2.	tablero at: (jugador2 c at: 1) at: (jugador2 c at: 2) put: 2.	tablero at: (jugador2 d at: 1) at: (jugador2 d at: 2) put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 17:31' prior: 33776377!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := Jugador1 new.	jugador1 inicializar.		"instancia de jugador 2"	jugador2 := Jugador2 new.	jugador2 inicializar.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Jugador2 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:34' prior: 33744121!inicializar	mov_anterior := #(6 7 8 12).	var_1_2 := 2.! !!Jugador1 methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:34' prior: 33741851!inicializar	mov_anterior := #(11 10 9 5).	var_1_2 := 1.		Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !Object subclass: #PiezaL	instanceVariableNames: 'var_1_2 mov_disponibles'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!PiezaL removeSelector: #a!PiezaL removeSelector: #b!PiezaL removeSelector: #c!PiezaL removeSelector: #d!----SNAPSHOT----2021-11-08T17:42:38.482054-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 221747!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:44'!var_1_2: unValor	var_1_2 := unValor.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:47'!borrar_anterior: mov_jug en: tablero	tablero replaceAll: var_1_2 with: 0.! !Jugador1 removeSelector: #borrar_anterior:en:!Jugador2 removeSelector: #borrar_anterior:en:!PiezaL subclass: #Jugador2	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!PiezaL subclass: #Jugador1	instanceVariableNames: ''	classVariableNames: ''	package: 'TPI'!Object subclass: #PiezaL	instanceVariableNames: 'var_1_2 mov_disponibles mov_anterior'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:49'!mov_anterior: unArreglo	mov_anterior := unArreglo! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 17:52' prior: 33777322!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	"jugador1 inicializar."	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.		"instancia de jugador 2"	jugador2 := PiezaL new.	"jugador2 inicializar."	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:55'!inicializar_posibles_movmientos	Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 17:55' prior: 33781923!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	"jugador1 inicializar."	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movmientos.		"instancia de jugador 2"	jugador2 := PiezaL new.	"jugador2 inicializar."	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !Jugador1 removeSelector: #inicializar!Jugador2 removeSelector: #inicializar!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:57'!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: var_1_2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: var_1_2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: var_1_2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: var_1_2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: var_1_2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: var_1_2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: var_1_2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: var_1_2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: var_1_2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: var_1_2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: var_1_2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: var_1_2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: var_1_2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: var_1_2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: var_1_2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: var_1_2.]].].].].].].].].].].].].].].].].! !Jugador1 removeSelector: #posicionar:en:!Jugador2 removeSelector: #posicionar:en:!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 17:59'!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	arr := #(var1_2 6 9).	mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !Jugador1 removeSelector: #superposicion:en:!Jugador2 removeSelector: #superposicion:en:!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:00'!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !Jugador1 removeSelector: #movimiento_j1:ronda:!Jugador2 removeSelector: #movimiento_j2:ronda:!Smalltalk globals removeClassNamed: #AnObsoleteJugador1!Smalltalk globals removeClassNamed: #AnObsoleteJugador2!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:02' prior: 33774614!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda.	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:09'!inicializar_posibles_movimientos	Posibles_movimientos := OrderedCollection new.	Posibles_movimientos add: #(1 2 3 7).	Posibles_movimientos add: #(3 2 1 5).	Posibles_movimientos add: #(5 6 7 3).	Posibles_movimientos add: #(7 6 5 1).		Posibles_movimientos add: #(2 3 4 8).	Posibles_movimientos add: #(4 3 2 6).	Posibles_movimientos add: #(6 7 8 4).	Posibles_movimientos add: #(8 7 6 2).		Posibles_movimientos add: #(5 6 7 11).	Posibles_movimientos add: #(7 6 5 9).	Posibles_movimientos add: #(9 10 11 7).	Posibles_movimientos add: #(11 10 9 5).		Posibles_movimientos add: #(6 7 8 12).	Posibles_movimientos add: #(8 7 6 10).	Posibles_movimientos add: #(10 11 12 8).	Posibles_movimientos add: #(12 11 10 6).		Posibles_movimientos add: #(9 10 11 15).	Posibles_movimientos add: #(11 10 9 13).	Posibles_movimientos add: #(15 14 13 9).	Posibles_movimientos add: #(13 14 15 11).		Posibles_movimientos add: #(10 11 12 16).	Posibles_movimientos add: #(12 11 10 14).	Posibles_movimientos add: #(16 15 14 10).	Posibles_movimientos add: #(14 15 16 12).	"aca empiezan los verticales"	Posibles_movimientos add: #(9 5 1 2).	Posibles_movimientos add: #(1 5 9 10).	Posibles_movimientos add: #(2 6 10 9).	Posibles_movimientos add: #(10 6 2 1).	Posibles_movimientos add: #(10 6 2 3).	Posibles_movimientos add: #(2 6 10 11).		Posibles_movimientos add: #(11 7 3 2).	Posibles_movimientos add: #(11 7 3 4).	Posibles_movimientos add: #(3 7 11 10).	Posibles_movimientos add: #(3 7 11 12).	Posibles_movimientos add: #(4 8 12 11).	Posibles_movimientos add: #(12 8 4 3).		Posibles_movimientos add: #(16 12 8 7).	Posibles_movimientos add: #(8 12 16 15).	Posibles_movimientos add: #(15 11 7 8).	Posibles_movimientos add: #(7 11 15 16).	Posibles_movimientos add: #(7 11 15 14).	Posibles_movimientos add: #(15 11 7 6).		Posibles_movimientos add: #(6 10 14 15).	Posibles_movimientos add: #(6 10 14 13).	Posibles_movimientos add: #(14 10 6 7).	Posibles_movimientos add: #(14 10 6 5).	Posibles_movimientos add: #(13 9 5 6).	Posibles_movimientos add: #(5 9 13 14).! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 18:09' prior: 33785229!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	"jugador1 inicializar."	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.		"instancia de jugador 2"	jugador2 := PiezaL new.	"jugador2 inicializar."	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !PiezaL removeSelector: #inicializar_posibles_movmientos!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 18:09' prior: 33794027!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !----SNAPSHOT----2021-11-08T18:11:46.809054-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 226445!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:18' prior: 33656384!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento ifNil: [ band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO' ].	movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:19' prior: 33796528!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento ifNil: [ band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO' ].	(band) ifFalse: [ ^false ].	movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:20' prior: 33797001!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.	movimiento ifNil: [ band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO' ].	(band) ifTrue: [ ^false ].	movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:25' prior: 33797503!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		movimiento ifNil: [ band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO' ].	(band) ifTrue: [ ^false ]			ifFalse: [ ^true ].	movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:27' prior: 33789731!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifFalse: [ ^true ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:28' prior: 33798529!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifFalse: [ ^false ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:29' prior: 33799271!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifTrue: [ ^false ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:30' prior: 33800014!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifTrue: [ ^true ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:35' prior: 33800756!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifTrue: [ ^true ]				ifFalse: [ ^'false' ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:35' prior: 33801497!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		(mov_jug) ifTrue: [ ^true ]				ifFalse: [ ^'cancelar' ].		mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:37' prior: 33798004!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		movimiento ifNil: [ band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO' ].	(band) ifTrue: [ ^false ]			ifFalse: [ ^true ].				movimiento := self conversion_string: movimiento.	].	^movimiento.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:38' prior: 33790653!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	^true.	! !----SNAPSHOT----2021-11-08T18:41:34.810054-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 241887!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:47' prior: 33803034!pedir_movimiento		| movimiento band|	movimiento := true.	[ movimiento isArray ] whileFalse: [  	movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.		movimiento ifNil: [ 		band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO'.			(band) ifTrue: [ ^false ]					ifFalse: [ ^true ].		 ].				movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:51' prior: 33805103!pedir_movimiento		| movimiento band |	movimiento := true.	[ movimiento isArray ] whileFalse: [  		movimiento := UIManager default request: 'Ingrese el movimiento que desea realizar'.			movimiento ifNil: [ 			band := UIManager default confirm: 'Desea cancelar el juego?' trueChoice: 'SI' falseChoice: 'NO'.			(band) ifTrue: [ ^false ]					ifFalse: [ ^true ].		 ].		movimiento := self conversion_string: movimiento.	].	^movimiento.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 18:54' prior: 33802264!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !----SNAPSHOT----2021-11-08T18:56:32.959856-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 250462!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 19:00' prior: 33736828!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		pos ifNil: [  ].		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^pos! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 19:01' prior: 33807147!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		pos ifNil: [ ^self pos_anterior ].		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^pos! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 19:07' prior: 33769127!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						var2 ifNil: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 19:08' prior: 33807947!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.						bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.						bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 19:11' prior: 33808986!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 19:11' prior: 33807543!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		pos ifNil: [ ^true ].		(pos isAllDigits) ifTrue: [ pos := pos asNumber ]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^pos! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 19:13' prior: 33810032!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !----SNAPSHOT----2021-11-08T19:15:54.771856-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 252507!----SNAPSHOT----2021-11-08T21:43:29.007841-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 258195!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:13'!generar_moneda	| rand fila columna bool|	bool := true.	[ bool ] whileTrue: [ 	rand = 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			^''.		 ]		ifFalse: [ bool := false ]	]! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:13' prior: 33812933!generar_moneda	| rand fila columna bool|	bool := true.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			^''.		 ]		ifFalse: [ bool := false ]	]! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:14' prior: 33803562!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:20' prior: 33813504!generar_moneda	| rand fila columna bool|	bool := true.	rand := Random new.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			^''.		 ]		ifFalse: [ bool := true ]	]! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:21' prior: 33815524!generar_moneda	| rand fila columna bool|	bool := true.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			^''.		 ]		ifFalse: [ bool := true ]	]! !Object subclass: #PiezaL	instanceVariableNames: 'var_1_2 mov_disponibles mov_anterior puntos'	classVariableNames: 'Posibles_movimientos'	package: 'TPI'!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:28' prior: 33786487!posicionar: mov_jug en: tablero	| aux_fila aux_col |	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: var_1_2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: var_1_2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: var_1_2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: var_1_2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: var_1_2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: var_1_2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: var_1_2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: var_1_2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: var_1_2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: var_1_2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: var_1_2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: var_1_2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: var_1_2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: var_1_2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: var_1_2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: var_1_2.]].].].].].].].].].].].].].].].].		mov_jug do: [ :s|				aux_fila := (tablero rowAndColumnForIndex: s) x.				aux_col := (tablero rowAndColumnForIndex: s) y.								((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ 						puntos := puntos + 1					 ]			 ]! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:31'!puntos: unValor	puntos := unValor.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:31' prior: 33816821!posicionar: mov_jug en: tablero	| aux_fila aux_col |	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: var_1_2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: var_1_2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: var_1_2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: var_1_2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: var_1_2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: var_1_2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: var_1_2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: var_1_2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: var_1_2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: var_1_2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: var_1_2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: var_1_2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: var_1_2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: var_1_2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: var_1_2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: var_1_2.]].].].].].].].].].].].].].].].].		mov_jug do: [ :s|				aux_fila := (tablero rowAndColumnForIndex: s) x.				aux_col := (tablero rowAndColumnForIndex: s) y.								((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ 						puntos := puntos + 1					 ]			 ].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:32'!puntos	^puntos! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 22:32' prior: 33795269!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:33'!mensaje_puntos: unJugador	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Puntos acumulados:' contents: unJugador puntos.	mensaje vanishDelay: 10.	mensaje openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:34' prior: 33814076!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:34' prior: 33821516!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:36' prior: 33821239!mensaje_puntos: unJugador	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Puntos acumulados:' contents: (unJugador puntos).	mensaje vanishDelay: 10.	mensaje openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:36' prior: 33824508!mensaje_puntos: unJugador	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Puntos acumulados:' contents: (unJugador puntos).	mensaje vanishDelay: 5.	mensaje openInWorld.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:41' prior: 33818460!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: var_1_2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: var_1_2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: var_1_2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: var_1_2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: var_1_2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: var_1_2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: var_1_2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: var_1_2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: var_1_2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: var_1_2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: var_1_2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: var_1_2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: var_1_2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: var_1_2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: var_1_2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: var_1_2.]].].].].].].].].].].].].].].].].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:41' prior: 33781190!borrar_anterior: mov_jug en: tablero	| aux_fila aux_col |			mov_jug do: [ :s|				aux_fila := (tablero rowAndColumnForIndex: s) x.				aux_col := (tablero rowAndColumnForIndex: s) y.								((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ 						puntos := puntos + 1					 ]			 ].		tablero replaceAll: var_1_2 with: 0.! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 22:44' prior: 33820069!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	"jugador1 puntos: 0."		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	"jugador2 puntos: 0."		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/8/2021 22:45' prior: 33826752!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:48'!sumar_puntos: unMovimiento en: tablero	| aux_fila aux_col |			unMovimiento do: [ :s|				aux_fila := (tablero rowAndColumnForIndex: s) x.				aux_col := (tablero rowAndColumnForIndex: s) y.								((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ 						puntos := puntos + 1					 ]			 ].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:48' prior: 33806185!movimiento_jugador: elTablero ronda: ronda	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.						Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/8/2021 22:50' prior: 33826336!borrar_anterior: mov_jug en: tablero	tablero replaceAll: var_1_2 with: 0.! !----SNAPSHOT----2021-11-08T22:50:13.349841-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 258309!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 17:45' prior: 33822996!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork.				bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 17:56' prior: 33830675!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !BorderedMorph subclass: #Tablero	instanceVariableNames: 'c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16'	classVariableNames: ''	package: 'TPI'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'contenedor c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16'	classVariableNames: ''	package: 'TPI'!BorderedMorph subclass: #Tablero	instanceVariableNames: 'c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16'	classVariableNames: ''	package: 'TPI'!!Tablero methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:01'!inicializarself color: Color gray.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color gray.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color gray.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color gray.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color gray.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color gray.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color gray.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color gray.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color gray.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color gray.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color gray.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.! !(Smalltalk globals at: #Tablero) rename: #Grafico!Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 mov tablero ronda grafico'	classVariableNames: ''	package: 'TPI'!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:04' prior: 33827932!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:04' prior: 33773161!jugar	| bool |	self inicializar.	bool := true.	Transcript open.	grafico openInWorld.	[ bool ] whileTrue: [ bool := self recibir_movimiento. ].! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:06' prior: 33834916!inicializarself color: Color gray.self extent: (300@300) asPoint.self position: (50@300) asPoint.c1 := BorderedMorph new.c1 color: Color gray.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color gray.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color gray.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color gray.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color gray.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color gray.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color gray.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color gray.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color gray.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color gray.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:08' prior: 33838705!inicializarself color: Color gray.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color gray.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color gray.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color gray.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color gray.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color gray.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color gray.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color gray.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color gray.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color gray.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color gray.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:08' prior: 33837233!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.	grafico position: (50@300) asPoint.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:10' prior: 33842966!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.	grafico position: (50@350) asPoint.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !----SNAPSHOT----2021-11-09T18:11:00.52613-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 276035!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:19'!pintar! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:20' prior: 33840853!inicializarself color: Color gray.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color gray.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color gray.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:24' prior: 33825066!posicionar: mov_jug en: tablero	mov_jug do: [:x|		(x = 1) ifTrue: [ tablero at: 1 at: 1 put: var_1_2. ]		ifFalse: [		(x = 2) ifTrue: [ tablero at: 1 at: 2 put: var_1_2. ]		ifFalse:[		(x = 3) ifTrue: [ tablero at: 1 at: 3 put: var_1_2. ]		ifFalse:[		(x = 4) ifTrue: [ tablero at: 1 at: 4 put: var_1_2. ]		ifFalse:[		(x = 5) ifTrue: [ tablero at: 2 at: 1 put: var_1_2. ]		ifFalse:[		(x = 6) ifTrue: [ tablero at: 2 at: 2 put: var_1_2. ]		ifFalse:[		(x = 7) ifTrue: [ tablero at: 2 at: 3 put: var_1_2. ]		ifFalse:[		(x = 8) ifTrue: [ tablero at: 2 at: 4 put: var_1_2. ]		ifFalse:[		(x = 9) ifTrue: [ tablero at: 3 at: 1 put: var_1_2. ]		ifFalse:[								(x = 10) ifTrue: [ tablero at: 3 at: 2 put: var_1_2. ]		ifFalse:[		(x = 11) ifTrue: [ tablero at: 3 at: 3 put: var_1_2. ]		ifFalse:[		(x = 12) ifTrue: [ tablero at: 3 at: 4 put: var_1_2. ]		ifFalse:[		(x = 13) ifTrue: [ tablero at: 4 at: 1 put: var_1_2. ]		ifFalse:[		(x = 14) ifTrue: [ tablero at: 4 at: 2 put: var_1_2. ]		ifFalse:[		(x = 15) ifTrue: [ tablero at: 4 at: 3 put: var_1_2. ]		ifFalse:[		(x = 16) ifTrue: [ tablero at: 4 at: 4 put: var_1_2.]].].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:27'!pintar: unArray	| posiciones |	posiciones := unArray.		posiciones do: [ :x|					 ]! !Grafico removeSelector: #pintar!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:39'!pintar: unArray jugador: unEntero	| posiciones jugador elColor|	posiciones := unArray.	jugador := unEntero.	(jugador = 1) ifTrue: [ elColor := Color red ]					ifFalse: [ elColor := Color blue ].		posiciones do: [:x|		(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:41'!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !PiezaL removeSelector: #movimiento_jugador:ronda:!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:41' prior: 33850454!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:42' prior: 33832562!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.	(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:43'!despintar: unArray	! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:44' prior: 33854265!despintar: unArray	| posiciones |		posiciones := unArray.		posiciones do: [:x|		(x = 1) ifTrue: [ c1 color: Color gray ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color gray ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color gray ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color gray ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color gray ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color gray ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color gray ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color gray ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color gray ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color gray ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color gray ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color gray ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color gray ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color gray ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color gray ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color gray ]].].].].].].].].].].].].].].].].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:45' prior: 33851414!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !Grafico removeSelector: #pintar:!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:53'!borrar_ficha_anterior: unEntero	| x |	x := unEntero.	(x = 1) ifTrue: [ c1 color: Color gray ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color gray ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color gray ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color gray ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color gray ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color gray ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color gray ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color gray ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color gray ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color gray ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color gray ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color gray ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color gray ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color gray ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color gray ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color gray ]].].].].].].].].].].].].].].].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:54' prior: 33811565!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior).					ficha_6 colocar: pos en: tablero ronda: ronda.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior).					ficha_9 colocar: pos en: tablero ronda: ronda.				]		].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:57'!pintar_ficha: unEntero	| x ficha elColor|	ficha := unEntero.	(ficha = 6) ifTrue: [ elColor := Color white ]					ifFalse: [ elColor := Color black ].			(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:57' prior: 33858822!pintar_ficha: unEntero	| x elColor|	x := unEntero.	(x = 6) ifTrue: [ elColor := Color white ]				ifFalse: [ elColor := Color black ].								(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 18:59'!pintar: unaPosicion ficha: unaFicha	| x ficha elColor|	x := unaPosicion.	ficha := unaFicha.	(ficha = 6) ifTrue: [ elColor := Color white ]				ifFalse: [ elColor := Color black ].			(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 18:59' prior: 33857560!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: 6.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: 9.				]		].! !Grafico removeSelector: #pintar_ficha:!!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 19:00' prior: 33845694!inicializarself color: Color gray.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color black.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.! !Object subclass: #Ficha	instanceVariableNames: 'pos_anterior valor moneda6 moneda9'	classVariableNames: ''	package: 'TPI'!Object subclass: #Ficha	instanceVariableNames: 'pos_anterior valor monedaGrafico'	classVariableNames: ''	package: 'TPI'!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 19:53'!inicializar: unString	| img |	img := Form fromFileNamed: unString.	monedaGrafico := ImageMorph new.	monedaGrafico form: img.	! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 19:54' prior: 33844228!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.	grafico position: (50@350) asPoint.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.	ficha_6 inicializar: 'moneda6.png'.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.	ficha_9 inicializar: 'moneda9.png'.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 19:56'!borrar_ficha_anterior: unEntero ficha: unaFicha	| x |	x := unEntero.	(x = 1) ifTrue: [ c1 removeMorph: unaFicha]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color gray ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color gray ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color gray ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color gray ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color gray ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color gray ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color gray ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color gray ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color gray ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color gray ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color gray ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color gray ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color gray ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color gray ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color gray ]].].].].].].].].].].].].].].].! !Grafico removeSelector: #borrar_ficha_anterior:!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 19:58'!borrar_ficha_anterior: unEntero graficoFicha: unGrafico	| x |	x := unEntero.	(x = 1) ifTrue: [ c1 removeMorph: unGrafico]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color gray ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color gray ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color gray ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color gray ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color gray ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color gray ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color gray ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color gray ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color gray ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color gray ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color gray ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color gray ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color gray ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color gray ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color gray ]].].].].].].].].].].].].].].].! !Grafico removeSelector: #borrar_ficha_anterior:ficha:!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 19:59'!monedaGrafico	^monedaGrafico! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:00' prior: 33862198!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior) graficoFicha: (ficha_6 monedaGrafico).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: 6.				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) graficoFicha: (ficha_9 monedaGrafico).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: 9.				]		].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:01' prior: 33868612!borrar_ficha_anterior: unEntero graficoFicha: unGrafico	| x |	x := unEntero.	(x = 1) ifTrue: [ c1 removeMorph: unGrafico]		ifFalse: [		(x = 2) ifTrue: [ c2 removeMorph: unGrafico]		ifFalse:[		(x = 3) ifTrue: [ c3 removeMorph: unGrafico]		ifFalse:[		(x = 4) ifTrue: [ c4 removeMorph: unGrafico]		ifFalse:[		(x = 5) ifTrue: [ c5 removeMorph: unGrafico]		ifFalse:[		(x = 6) ifTrue: [ c6 removeMorph: unGrafico]		ifFalse:[		(x = 7) ifTrue: [ c7 removeMorph: unGrafico]		ifFalse:[		(x = 8) ifTrue: [ c8 removeMorph: unGrafico]		ifFalse:[		(x = 9) ifTrue: [ c9 removeMorph: unGrafico]		ifFalse:[								(x = 10) ifTrue: [ c10 removeMorph: unGrafico]		ifFalse:[		(x = 11) ifTrue: [ c11 removeMorph: unGrafico]		ifFalse:[		(x = 12) ifTrue: [ c12 removeMorph: unGrafico]		ifFalse:[		(x = 13) ifTrue: [ c13 removeMorph: unGrafico]		ifFalse:[		(x = 14) ifTrue: [ c14 removeMorph: unGrafico]		ifFalse:[		(x = 15) ifTrue: [ c15 removeMorph: unGrafico]		ifFalse:[		(x = 16) ifTrue: [ c16 removeMorph: unGrafico]].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:02'!pintar: unaPosicion ficha: unaFicha graficoFicha: unGrafico	| x ficha elColor|	x := unaPosicion.	ficha := unaFicha.	(ficha = 6) ifTrue: [ elColor := Color white ]				ifFalse: [ elColor := Color black ].			(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].! !Grafico removeSelector: #pintar:ficha:!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:03'!pintar: unaPosicion graficoFicha: unGrafico	| x ficha elColor|	x := unaPosicion.		(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].].! !Grafico removeSelector: #pintar:ficha:graficoFicha:!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:05' prior: 33873647!pintar: unaPosicion graficoFicha: unGrafico	| x |	x := unaPosicion.		(x = 1) ifTrue: [ c1 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse: [		(x = 2) ifTrue: [ c2 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 3) ifTrue: [ c3 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 4) ifTrue: [ c4 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 5) ifTrue: [ c5 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 6) ifTrue: [ c6 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 7) ifTrue: [ c7 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 8) ifTrue: [ c8 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 9) ifTrue: [ c9 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[								(x = 10) ifTrue: [ c10 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 11) ifTrue: [ c11 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 12) ifTrue: [ c12 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 13) ifTrue: [ c13 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 14) ifTrue: [ c14 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 15) ifTrue: [ c15 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 16) ifTrue: [ c16 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]].].].].].].].].].].].].].].].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:06' prior: 33869869!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior) graficoFicha: (ficha_6 monedaGrafico).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_6 monedaGrafico).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) graficoFicha: (ficha_9 monedaGrafico).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_9 monedaGrafico).				]		].! !BorderedMorph subclass: #Grafico	instanceVariableNames: 'c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16 ficha6 ficha9'	classVariableNames: ''	package: 'TPI'!!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:12' prior: 33863577!inicializar| img |self color: Color gray.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img := Form fromFileNamed: 'moneda9.png'.ficha6 := ImageMorph new.ficha6 form: img.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color black.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6. ficha6 center: (37.5@37.5) asPoint.c2 addMorph: ficha9. ficha9 center: (37.5@37.5) asPoint.! !Object subclass: #Ficha	instanceVariableNames: 'pos_anterior valor'	classVariableNames: ''	package: 'TPI'!Ficha removeSelector: #inicializar:!Ficha removeSelector: #monedaGrafico!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:16' prior: 33866153!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.	grafico position: (50@350) asPoint.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:18'!pintar: unaPosicion ficha: unaFicha	| x unGrafico |	x := unaPosicion.		(unaFicha = 6) ifTrue: [ unGrafico := ficha6 ]						ifFalse: [ unGrafico := ficha9 ].		(x = 1) ifTrue: [ c1 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse: [		(x = 2) ifTrue: [ c2 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 3) ifTrue: [ c3 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 4) ifTrue: [ c4 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 5) ifTrue: [ c5 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 6) ifTrue: [ c6 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 7) ifTrue: [ c7 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 8) ifTrue: [ c8 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 9) ifTrue: [ c9 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[								(x = 10) ifTrue: [ c10 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 11) ifTrue: [ c11 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 12) ifTrue: [ c12 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 13) ifTrue: [ c13 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 14) ifTrue: [ c14 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 15) ifTrue: [ c15 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]		ifFalse:[		(x = 16) ifTrue: [ c16 addMorph: unGrafico. unGrafico center: (37.5@37.5) asPoint.]].].].].].].].].].].].].].].].! !Grafico removeSelector: #pintar:graficoFicha:!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:19'!borrar_ficha_anterior: unEntero ficha: unaFicha	| x unGrafico |	x := unEntero.		(unaFicha = 6) ifTrue: [ unGrafico := ficha6 ]						ifFalse: [ unGrafico := ficha9 ].	(x = 1) ifTrue: [ c1 removeMorph: unGrafico]		ifFalse: [		(x = 2) ifTrue: [ c2 removeMorph: unGrafico]		ifFalse:[		(x = 3) ifTrue: [ c3 removeMorph: unGrafico]		ifFalse:[		(x = 4) ifTrue: [ c4 removeMorph: unGrafico]		ifFalse:[		(x = 5) ifTrue: [ c5 removeMorph: unGrafico]		ifFalse:[		(x = 6) ifTrue: [ c6 removeMorph: unGrafico]		ifFalse:[		(x = 7) ifTrue: [ c7 removeMorph: unGrafico]		ifFalse:[		(x = 8) ifTrue: [ c8 removeMorph: unGrafico]		ifFalse:[		(x = 9) ifTrue: [ c9 removeMorph: unGrafico]		ifFalse:[								(x = 10) ifTrue: [ c10 removeMorph: unGrafico]		ifFalse:[		(x = 11) ifTrue: [ c11 removeMorph: unGrafico]		ifFalse:[		(x = 12) ifTrue: [ c12 removeMorph: unGrafico]		ifFalse:[		(x = 13) ifTrue: [ c13 removeMorph: unGrafico]		ifFalse:[		(x = 14) ifTrue: [ c14 removeMorph: unGrafico]		ifFalse:[		(x = 15) ifTrue: [ c15 removeMorph: unGrafico]		ifFalse:[		(x = 16) ifTrue: [ c16 removeMorph: unGrafico]].].].].].].].].].].].].].].].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:20' prior: 33876492!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior) ficha: (ficha_6 valor).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_6 monedaGrafico).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) graficoFicha: (ficha_9 monedaGrafico).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_9 monedaGrafico).				]		].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:20' prior: 33885101!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior) ficha: (ficha_6 valor).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_6 monedaGrafico).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) ficha: (ficha_9 valor).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos graficoFicha: (ficha_9 monedaGrafico).				]		].! !Grafico removeSelector: #borrar_ficha_anterior:graficoFicha:!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:21' prior: 33886556!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_6 pos_anterior) ficha: (ficha_6 valor).					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_6 valor).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) ficha: (ficha_9 valor).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_9 valor).				]		].! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:23' prior: 33878134!inicializar| img |self color: Color gray.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color gray.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color gray.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color gray.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color gray.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color gray.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color gray.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color black.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6. ficha6 center: (37.5@37.5) asPoint.c2 addMorph: ficha9. ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:24' prior: 33889471!inicializar| img |self color: Color gray.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6. ficha6 center: (37.5@37.5) asPoint.c2 addMorph: ficha9. ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:25' prior: 33891881!inicializar| img |self color: Color gray.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6. ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9. ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:25' prior: 33894297!inicializar| img img2|self color: Color gray.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6. ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9. ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:28' prior: 33896714!inicializar| img img2|self color: Color white.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:28' prior: 33899137!inicializar| img img2|self color: Color white.self extent: (300@300) asPoint.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.c1 addMorph: ficha6.ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9.ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:30' prior: 33901565!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16."img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 addMorph: ficha6.ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9.ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:31' prior: 33903989!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 addMorph: ficha6.ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9.ficha9 center: (37.5@37.5) asPoint.! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:33' prior: 33906416!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img."img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2."c1 addMorph: ficha6.ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9.ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:34' prior: 33908841!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 addMorph: ficha6.ficha6 center: (37.5@37.5) asPoint.c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:37' prior: 33911270!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:39' prior: 33913697!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := Morph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := Morph new.ficha9 form: img2.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:39' prior: 33916126!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := ImageMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := ImageMorph new.ficha9 form: img2.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:40' prior: 33918545!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := BorderedMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := BorderedMorph new.ficha9 form: img2.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:41' prior: 33920974!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.img := Form fromFileNamed: 'moneda6.png'.ficha6 := BorderedMorph new.ficha6 form: img.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 := BorderedMorph new.ficha9 form: img2.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:43' prior: 33923409!inicializar| img img2 aux aux2|self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.ficha6 := BorderedMorph new.img := Form fromFileNamed: 'moneda6.png'.aux := ImageMorph new.aux form: img.ficha6 addMorph: aux.ficha9 := BorderedMorph new.img2 := Form fromFileNamed: 'moneda6.png'.aux2 := ImageMorph new.aux2 form: img2.ficha9 addMorph: aux.c1 addMorph: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorph: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:45' prior: 33925844!inicializar| img img2 aux aux2|self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.ficha6 := BorderedMorph new.img := Form fromFileNamed: 'moneda6.png'.aux := ImageMorph new.aux form: img.ficha6 addMorph: aux.ficha9 := BorderedMorph new.img2 := Form fromFileNamed: 'moneda6.png'.aux2 := ImageMorph new.aux2 form: img2.ficha9 addMorph: aux.c1 addMorphCentered: ficha6."ficha6 center: (37.5@37.5) asPoint."c16 addMorphCentered: ficha9."ficha9 center: (37.5@37.5) asPoint."! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 20:47' prior: 33928373!inicializar| img img2 aux aux2|self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.ficha6 := ImageMorph new.img := Form fromFileNamed: 'moneda6.png'.ficha6 form: img.ficha9 := ImageMorph new.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 form: img2.c1 addMorphCentered: ficha6.c16 addMorphCentered: ficha9.! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:48' prior: 33854385!despintar: unArray	| posiciones |		posiciones := unArray.		posiciones do: [:x|		(x = 1) ifTrue: [ c1 color: Color white ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color white ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color white ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color white ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color white ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color white ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color white ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color white ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color white ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color white ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color white ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color white ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color white ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color white ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color white ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color white ]].].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:50' prior: 33881988!pintar: unaPosicion ficha: unaFicha	| x unGrafico |	x := unaPosicion.		(unaFicha = 6) ifTrue: [ unGrafico := ficha6 ]						ifFalse: [ unGrafico := ficha9 ].		(x = 1) ifTrue: [ c1 addMorphCentered: unGrafico]		ifFalse: [		(x = 2) ifTrue: [ c2 addMorphCentered: unGrafico]		ifFalse:[		(x = 3) ifTrue: [ c3 addMorphCentered: unGrafico]		ifFalse:[		(x = 4) ifTrue: [ c4 addMorphCentered: unGrafico]		ifFalse:[		(x = 5) ifTrue: [ c5 addMorphCentered: unGrafico]		ifFalse:[		(x = 6) ifTrue: [ c6 addMorphCentered: unGrafico]		ifFalse:[		(x = 7) ifTrue: [ c7 addMorphCentered: unGrafico]		ifFalse:[		(x = 8) ifTrue: [ c8 addMorphCentered: unGrafico]		ifFalse:[		(x = 9) ifTrue: [ c9 addMorphCentered: unGrafico.]		ifFalse:[								(x = 10) ifTrue: [ c10 addMorphCentered: unGrafico]		ifFalse:[		(x = 11) ifTrue: [ c11 addMorphCentered: unGrafico]		ifFalse:[		(x = 12) ifTrue: [ c12 addMorphCentered: unGrafico]		ifFalse:[		(x = 13) ifTrue: [ c13 addMorphCentered: unGrafico]		ifFalse:[		(x = 14) ifTrue: [ c14 addMorphCentered: unGrafico]		ifFalse:[		(x = 15) ifTrue: [ c15 addMorphCentered: unGrafico]		ifFalse:[		(x = 16) ifTrue: [ c16 addMorphCentered: unGrafico]].].].].].].].].].].].].].].].! !----SNAPSHOT----2021-11-09T20:52:55.40313-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 290974!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:56' prior: 33852366!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 20:59' prior: 33935865!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	((ronda \\ 2) = 0) ifTrue:	[self generar_moneda].	^true.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:12' prior: 33787827!superposicion: mov_jug en: tablero	|flag arr|	flag := true.	(var_1_2 = 1) ifTrue: [ arr := #(2 6 9) ]					ifFalse: [ arr := #(1 6 9) ].		mov_jug do: [:x|			(x = 1) ifTrue: [ (arr includes: (tablero at: 1 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse: [		(x = 2) ifTrue: [ (arr includes: (tablero at: 1 at: 2)) ifTrue: [^flag := false].  ]		ifFalse:[		(x = 3) ifTrue: [ (arr includes: (tablero at: 1 at: 3)) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 4) ifTrue: [ (arr includes: (tablero at: 1 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 5) ifTrue: [ (arr includes: (tablero at: 2 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 6) ifTrue: [ (arr includes: (tablero at: 2 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 7) ifTrue: [ (arr includes: (tablero at: 2 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 8) ifTrue: [ (arr includes: (tablero at: 2 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 9) ifTrue: [ (arr includes: (tablero at: 3 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[								(x = 10) ifTrue: [ (arr includes: (tablero at: 3 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 11) ifTrue: [ (arr includes: (tablero at: 3 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 12) ifTrue: [ (arr includes: (tablero at: 3 at: 4) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 13) ifTrue: [ (arr includes: (tablero at: 4 at: 1) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 14) ifTrue: [ (arr includes: (tablero at: 4 at: 2) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 15) ifTrue: [ (arr includes: (tablero at: 4 at: 3) ) ifTrue: [^flag := false]. ]		ifFalse:[		(x = 16) ifTrue: [ (arr includes: (tablero at: 4 at: 4) ) ifTrue: [^flag := false].]].].].].].].].].].].].].].].].].		^flag.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:16' prior: 33938060!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].	self mover_ficha.	ronda := ronda + 1.	self generar_moneda.	"((ronda \\ 2) = 0) ifTrue:	[self generar_moneda]."	 ^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:21' prior: 33942170!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].			((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].	self mover_ficha.		ronda := ronda + 1.		self generar_moneda.	"((ronda \\ 2) = 0) ifTrue:	[self generar_moneda]."	 ^true.	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:21' prior: 33944419!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 				"[ UIManager default                informUserDuring: [ :bar |                     #('Tiempo restante')                        do: [ :info |                             bar label: info.                            1 to: 100 do: [ :v |                                 bar current: v.                                (Delay forMilliseconds: 300) wait ]. ] ] ] fork."				bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].			((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].	self mover_ficha.		ronda := ronda + 1.		self generar_moneda.	"((ronda \\ 2) = 0) ifTrue:	[self generar_moneda]."	 ^true.! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:23' prior: 33746467!posiciones_disponibles: tablero		| arreglo y arr_tab|	y := 1.	arreglo := Array new: 10.	arr_tab := tablero asArray.	1 to: arr_tab size do: [:x |		(((arr_tab at: x) = var_1_2) | ((arr_tab at: x) = 0) | ((arr_tab at: x) = 5)) ifTrue: [ 				arreglo at: y put: x. y := y + 1			]	 ].	^arreglo.! !----SNAPSHOT----2021-11-09T21:37:54.130789-03:00 Pharo7.0.5-0-64bit-fd8c156(TPIcopia).image priorSource: 381226!----SNAPSHOT----2021-11-09T21:41:20.401953-03:00 Pharo7.1.5.image(LGame).image priorSource: 394797!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 21:51' prior: 33880730!inicializar	ronda := 1.	tablero := Array2D new: 4.	tablero atAllPut: 0.		grafico := Grafico new.	grafico inicializar.	grafico position: (50@350) asPoint.		"instancia de jugador 1"	jugador1 := PiezaL new.	jugador1 mov_anterior: #(11 10 9 5).	jugador1 var_1_2: 1.	jugador1 inicializar_posibles_movimientos.	jugador1 puntos: 0.		"instancia de jugador 2"	jugador2 := PiezaL new.	jugador2 mov_anterior: #(6 7 8 12).	jugador2 var_1_2: 2.	jugador2 puntos: 0.		"instancia de ficha neutral 6"	ficha_6 := Ficha new.	ficha_6 valor: 6.	ficha_6 pos_anterior: 1.		"instancia de ficha neutral 9"	ficha_9 := Ficha new.	ficha_9 valor: 9.	ficha_9 pos_anterior: 16.		"posicion inicial fichas neutrales"	tablero at: 1 at: 1 put: 6.	tablero at: 4 at: 4 put: 9.	"posicion inicial jugador 1"	tablero at: 2 at: 1 put: 1.	tablero at: 3 at: 1 put: 1.	tablero at: 3 at: 2 put: 1.	tablero at: 3 at: 3 put: 1.	"posicion inicial jugador 2"	tablero at: 2 at: 2 put: 2.	tablero at: 2 at: 3 put: 2.	tablero at: 2 at: 4 put: 2.	tablero at: 3 at: 4 put: 2.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero; cr.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:51'!abrir_reglas	| img morph |	img := Form fromFileNamed: 'reglas.png'.	morph := ImageMorph new.	morph form: img.	morph openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:51' prior: 33838468!jugar	| bool |	self inicializar.	bool := true.	Transcript open.	grafico openInWorld.	self abrir_reglas.	[ bool ] whileTrue: [ bool := self recibir_movimiento. ].! !!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/9/2021 21:52' prior: 33930918!inicializar| img img2 |self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.ficha6 := ImageMorph new.img := Form fromFileNamed: 'moneda6.png'.ficha6 form: img.ficha9 := ImageMorph new.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 form: img2.c1 addMorphCentered: ficha6.c16 addMorphCentered: ficha9.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:53' prior: 33950785!abrir_reglas	| img morph |	img := Form fromFileNamed: 'reglas.png'.	morph := ImageMorph new.	morph form: img.	morph position: (400@20) asPoint	morph openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:53' prior: 33953654!abrir_reglas	| img morph |	img := Form fromFileNamed: 'reglas.png'.	morph := ImageMorph new.	morph form: img.	morph position: (800@20) asPoint	morph openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:54' prior: 33953922!abrir_reglas	| img morph |	img := Form fromFileNamed: 'reglas.png'.	morph := ImageMorph new.	morph form: img.	morph position: (800@20) asPoint	morph openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/9/2021 21:54' prior: 33954190!abrir_reglas	| img morph |	img := Form fromFileNamed: 'reglas.png'.	morph := ImageMorph new.	morph form: img.	morph position: (800@20) asPoint.	morph openInWorld.! !----SNAPSHOT----2021-11-09T21:59:46.746848-03:00 Pharo7.1.5.image(LGame).image priorSource: 394911!BorderedMorph subclass: #Grafico	instanceVariableNames: 'c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16 ficha6 ficha9 estrella'	classVariableNames: ''	package: 'TPI'!!Grafico methodsFor: 'accessing' stamp: 'Anonymous 11/10/2021 00:00' prior: 33951277!inicializar| img img2 img3|self color: Color white.self extent: (300@300) asPoint.c1 := BorderedMorph new.c1 color: Color white.c1 extent: (75@75) asPoint.c2 := BorderedMorph new.c2 color: Color white.c2 position: (75@0) asPoint.c2 extent: (75@75) asPoint.c3 := BorderedMorph new.c3 color: Color white.c3 position: (150@0) asPoint.c3 extent: (75@75) asPoint.c4 := BorderedMorph new.c4 color: Color white.c4 position: (225@0) asPoint.c4 extent: (75@75) asPoint.c5 := BorderedMorph new.c5 color: Color red.c5 position: (0@75) asPoint.c5 extent: (75@75) asPoint.c6 := BorderedMorph new.c6 color: Color blue.c6 position: (75@75) asPoint.c6 extent: (75@75) asPoint.c7 := BorderedMorph new.c7 color: Color blue.c7 position: (150@75) asPoint.c7 extent: (75@75) asPoint.c8 := BorderedMorph new.c8 color: Color blue.c8 position: (225@75) asPoint.c8 extent: (75@75) asPoint.c9 := BorderedMorph new.c9 color: Color red.c9 position: (0@150) asPoint.c9 extent: (75@75) asPoint.c10 := BorderedMorph new.c10 color: Color red.c10 position: (75@150) asPoint.c10 extent: (75@75) asPoint.c11 := BorderedMorph new.c11 color: Color red.c11 position: (150@150) asPoint.c11 extent: (75@75) asPoint.c12 := BorderedMorph new.c12 color: Color blue.c12 position: (225@150) asPoint.c12 extent: (75@75) asPoint.c13 := BorderedMorph new.c13 color: Color white.c13 position: (0@225) asPoint.c13 extent: (75@75) asPoint.c14 := BorderedMorph new.c14 color: Color white.c14 position: (75@225) asPoint.c14 extent: (75@75) asPoint.c15 := BorderedMorph new.c15 color: Color white.c15 position: (150@225) asPoint.c15 extent: (75@75) asPoint.c16 := BorderedMorph new.c16 color: Color white.c16 position: (225@225) asPoint.c16 extent: (75@75) asPoint.self 	addMorph: c1;	addMorph: c2;	addMorph: c3;	addMorph: c4;	addMorph: c5;	addMorph: c6;	addMorph: c7;	addMorph: c8;	addMorph: c9;	addMorph: c10;	addMorph: c11;	addMorph: c12;	addMorph: c13;	addMorph: c14;	addMorph: c15;	addMorph: c16.estrella := ImageMorph new.img3 := Form fromFileNamed: 'estrella.png'.estrella form: img3.ficha6 := ImageMorph new.img := Form fromFileNamed: 'moneda6.png'.ficha6 form: img.ficha9 := ImageMorph new.img2 := Form fromFileNamed: 'moneda9.png'.ficha9 form: img2.c1 addMorphCentered: ficha6.c16 addMorphCentered: ficha9.! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 00:04'!colocar_estrella: unaPosicion	| x |	x := unaPosicion.		(x = 1) ifTrue: [ c1 addMorphCentered: estrella]		ifFalse: [		(x = 2) ifTrue: [ c2 addMorphCentered: estrella]		ifFalse:[		(x = 3) ifTrue: [ c3 addMorphCentered: estrella]		ifFalse:[		(x = 4) ifTrue: [ c4 addMorphCentered: estrella]		ifFalse:[		(x = 5) ifTrue: [ c5 addMorphCentered: estrella]		ifFalse:[		(x = 6) ifTrue: [ c6 addMorphCentered: estrella]		ifFalse:[		(x = 7) ifTrue: [ c7 addMorphCentered: estrella]		ifFalse:[		(x = 8) ifTrue: [ c8 addMorphCentered: estrella]		ifFalse:[		(x = 9) ifTrue: [ c9 addMorphCentered: estrella]		ifFalse:[								(x = 10) ifTrue: [ c10 addMorphCentered: estrella]		ifFalse:[		(x = 11) ifTrue: [ c11 addMorphCentered: estrella]		ifFalse:[		(x = 12) ifTrue: [ c12 addMorphCentered: estrella]		ifFalse:[		(x = 13) ifTrue: [ c13 addMorphCentered: estrella]		ifFalse:[		(x = 14) ifTrue: [ c14 addMorphCentered: estrella]		ifFalse:[		(x = 15) ifTrue: [ c15 addMorphCentered: estrella]		ifFalse:[		(x = 16) ifTrue: [ c16 addMorphCentered: estrella]].].].].].].].].].].].].].].].	! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 00:05' prior: 33816092!generar_moneda	| rand fila columna bool|	bool := true.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			grafico colocar_estrella: rand.			^''.		 ]		ifFalse: [ bool := true ]	]! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 00:18'!borrar_estrella: unArray en: elTablero	| posiciones tablero |	posiciones := unArray.	tablero := elTablero	posiciones do: [:x|		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 5) ifTrue: [ c1 removeMorph: estrella ] ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 5) ifTrue: [ c2 removeMorph: estrella ] ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 5) ifTrue: [ c3 removeMorph: estrella ] ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 5) ifTrue: [ c4 removeMorph: estrella ] ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 5) ifTrue: [ c5 removeMorph: estrella ] ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 5) ifTrue: [ c6 removeMorph: estrella ] ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 5) ifTrue: [ c7 removeMorph: estrella ] ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 5) ifTrue: [ c8 removeMorph: estrella ] ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1) = 5) ifTrue: [ c9 removeMorph: estrella ] ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 5) ifTrue: [ c10 removeMorph: estrella ] ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 5) ifTrue: [ c11 removeMorph: estrella ] ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 5) ifTrue: [ c12 removeMorph: estrella ] ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 5) ifTrue: [ c13 removeMorph: estrella ] ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 5) ifTrue: [ c14 removeMorph: estrella ] ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 5) ifTrue: [ c15 removeMorph: estrella ] ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 5) ifTrue: [ c16 removeMorph: estrella ] ]].].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 00:19' prior: 33959256!borrar_estrella: unArray en: elTablero	| posiciones tablero |	posiciones := unArray.	tablero := elTablero.	posiciones do: [:x|		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 5) ifTrue: [ c1 removeMorph: estrella ] ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 5) ifTrue: [ c2 removeMorph: estrella ] ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 5) ifTrue: [ c3 removeMorph: estrella ] ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 5) ifTrue: [ c4 removeMorph: estrella ] ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 5) ifTrue: [ c5 removeMorph: estrella ] ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 5) ifTrue: [ c6 removeMorph: estrella ] ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 5) ifTrue: [ c7 removeMorph: estrella ] ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 5) ifTrue: [ c8 removeMorph: estrella ] ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1) = 5) ifTrue: [ c9 removeMorph: estrella ] ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 5) ifTrue: [ c10 removeMorph: estrella ] ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 5) ifTrue: [ c11 removeMorph: estrella ] ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 5) ifTrue: [ c12 removeMorph: estrella ] ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 5) ifTrue: [ c13 removeMorph: estrella ] ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 5) ifTrue: [ c14 removeMorph: estrella ] ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 5) ifTrue: [ c15 removeMorph: estrella ] ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 5) ifTrue: [ c16 removeMorph: estrella ] ]].].].].].].].].].].].].].].].].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 00:20' prior: 33855489!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			grafico borrar_estrella: mov_jug en: elTablero.			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !----SNAPSHOT----2021-11-10T00:24:10.264744-03:00 Pharo7.1.5.image(LGame).image priorSource: 400197!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 15:30' prior: 33770128!mensaje_posibles_movimientos: posibles_movimientos	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Movimientos posibles en la ronda:' contents: posibles_movimientos.	mensaje vanishDelay: 8.	mensaje openInWorld.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/10/2021 15:30' prior: 33824787!mensaje_puntos: unJugador	| mensaje |	mensaje := GrowlMorph new.	mensaje label: 'Puntos acumulados:' contents: (unJugador puntos).	mensaje vanishDelay: 8.	mensaje openInWorld.! !----SNAPSHOT----2021-11-10T16:40:20.854302-03:00 Pharo7.1.5.image(LGame).image priorSource: 409483!Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 tablero ronda grafico'	classVariableNames: ''	package: 'TPI'!Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_9 tablero ronda grafico'	classVariableNames: ''	package: 'TPI'!Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 tablero ronda grafico'	classVariableNames: ''	package: 'TPI'!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/11/2021 20:28' prior: 33946674!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].			((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].	self mover_ficha.		ronda := ronda + 1.		self generar_moneda.	"((ronda \\ 2) = 0) ifTrue:	[self generar_moneda]."	 ^true.! !----SNAPSHOT----2021-11-11T21:29:24.855045-03:00 Pharo7.1.5.image(LGame).image priorSource: 410184!!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:17' prior: 33761901!colocar: unaPosicion en: tablero ronda: ronda	| pos aux_fila aux_col|	pos := unaPosicion.		aux_fila := (tablero rowAndColumnForIndex: pos) x.	aux_col := (tablero rowAndColumnForIndex: pos) y.	tablero at: aux_fila at: aux_col put: valor.			pos_anterior := pos.		Transcript clear.		Transcript show: 'Numero de ronda: '; show: ronda; cr.		Transcript show: tablero; cr.		! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:24' prior: 33962970!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			grafico borrar_estrella: mov_jug en: tablero.			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:34' prior: 33961113!borrar_estrella: unArray en: elTablero	| posiciones tablero |	posiciones := unArray.	tablero := elTablero.	posiciones do: [:x|		(x = 1) ifTrue: [ ((tablero at: 1 at: 1) = 5) ifTrue: [ c1 removeMorph: estrella ] ]		ifFalse: [		(x = 2) ifTrue: [ ((tablero at: 1 at: 2) = 5) ifTrue: [ c2 removeMorph: estrella ] ]		ifFalse:[		(x = 3) ifTrue: [ ((tablero at: 1 at: 3) = 5) ifTrue: [ c3 removeMorph: estrella ] ]		ifFalse:[		(x = 4) ifTrue: [ ((tablero at: 1 at: 4) = 5) ifTrue: [ c4 removeMorph: estrella ] ]		ifFalse:[		(x = 5) ifTrue: [ ((tablero at: 2 at: 1) = 5) ifTrue: [ c5 removeMorph: estrella ] ]		ifFalse:[		(x = 6) ifTrue: [ ((tablero at: 2 at: 2) = 5) ifTrue: [ c6 removeMorph: estrella ] ]		ifFalse:[		(x = 7) ifTrue: [ ((tablero at: 2 at: 3) = 5) ifTrue: [ c7 removeMorph: estrella ] ]		ifFalse:[		(x = 8) ifTrue: [ ((tablero at: 2 at: 4) = 5) ifTrue: [ c8 removeMorph: estrella ] ]		ifFalse:[		(x = 9) ifTrue: [ ((tablero at: 3 at: 1) = 5) ifTrue: [ c9 removeMorph: estrella ] ]		ifFalse:[								(x = 10) ifTrue: [ ((tablero at: 3 at: 2) = 5) ifTrue: [ c10 removeMorph: estrella ] ]		ifFalse:[		(x = 11) ifTrue: [ ((tablero at: 3 at: 3) = 5) ifTrue: [ c11 removeMorph: estrella ] ]		ifFalse:[		(x = 12) ifTrue: [ ((tablero at: 3 at: 4) = 5) ifTrue: [ c12 removeMorph: estrella ] ]		ifFalse:[		(x = 13) ifTrue: [ ((tablero at: 4 at: 1) = 5) ifTrue: [ c13 removeMorph: estrella ] ]		ifFalse:[		(x = 14) ifTrue: [ ((tablero at: 4 at: 2) = 5) ifTrue: [ c14 removeMorph: estrella ] ]		ifFalse:[		(x = 15) ifTrue: [ ((tablero at: 4 at: 3) = 5) ifTrue: [ c15 removeMorph: estrella ] ]		ifFalse:[		(x = 16) ifTrue: [ ((tablero at: 4 at: 4) = 5) ifTrue: [ c16 removeMorph: estrella ] ]].].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:36'!analizar_casilla: unEntero	| x |	x := unEntero.	(x = 1) ifTrue: [ ^c1]		ifFalse: [		(x = 2) ifTrue: [ ^c2]		ifFalse:[		(x = 3) ifTrue: [ ^c3]		ifFalse:[		(x = 4) ifTrue: [ ^c4]		ifFalse:[		(x = 5) ifTrue: [ ^c5]		ifFalse:[		(x = 6) ifTrue: [ ^c6]		ifFalse:[		(x = 7) ifTrue: [ ^c7]		ifFalse:[		(x = 8) ifTrue: [ ^c8]		ifFalse:[		(x = 9) ifTrue: [ ^c9]		ifFalse:[								(x = 10) ifTrue: [ ^c10]		ifFalse:[		(x = 11) ifTrue: [ ^c11]		ifFalse:[		(x = 12) ifTrue: [ ^c12]		ifFalse:[		(x = 13) ifTrue: [ ^c13]		ifFalse:[		(x = 14) ifTrue: [ ^c14]		ifFalse:[		(x = 15) ifTrue: [ ^c15]		ifFalse:[		(x = 16) ifTrue: [ ^c16]].].].].].].].].].].].].].].].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:41' prior: 33957458!colocar_estrella: unaPosicion	| x |	x := unaPosicion.		(self analizar_casilla: x) addMorphCentered: estrella	! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:48' prior: 33968743!borrar_estrella: unArray en: elTablero	| posiciones tablero aux_fila aux_col|	posiciones := unArray.	tablero := elTablero.	posiciones do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ (self analizar_casilla: s) removeMorph: estrella ]		].! !!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/12/2021 15:54' prior: 33888059!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					"grafico borrar_ficha_anterior: (ficha_6 pos_anterior) ficha: (ficha_6 valor)."					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_6 valor).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					grafico borrar_ficha_anterior: (ficha_9 pos_anterior) ficha: (ficha_9 valor).					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_9 valor).				]		].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:56' prior: 33971367!colocar_estrella: unaPosicion	| x aux|	x := unaPosicion.	aux := estrella.		(self analizar_casilla: x) addMorphCentered: aux.	! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 15:58' prior: 33967703!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			"grafico borrar_estrella: mov_jug en: tablero."			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 16:01'!generar_estrella	|estrella1 img|	estrella1 := ImageMorph new.	img := Form fromFileNamed: 'estrella.png'.	estrella1 form: img.	^estrella1! !BorderedMorph subclass: #Grafico	instanceVariableNames: 'c1 c2 c3 c4 c5 c6 c7 c8 c9 c10 c11 c12 c13 c14 c15 c16 ficha6 ficha9 estrella'	classVariableNames: ''	package: 'TPI'!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 16:02' prior: 33973456!colocar_estrella: unaPosicion	| x aux|	x := unaPosicion.	aux := self generar_estrella.		(self analizar_casilla: x) addMorphCentered: aux.	! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 16:06' prior: 33971582!borrar_estrella: unArray en: elTablero	| posiciones tablero aux_fila aux_col|	posiciones := unArray.	tablero := elTablero.	posiciones do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ (self analizar_casilla: s) removeAllMorphs ]		].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 16:12' prior: 33975379!borrar_estrella: unArray en: elTablero	| posiciones tablero aux_fila aux_col|	posiciones := unArray.	tablero := elTablero.	posiciones do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ (self analizar_casilla: s) removeMorph: ((self analizar_casilla: s) submorphs) ]		].! !----SNAPSHOT----2021-11-12T16:14:18.77645-03:00 Pharo7.1.5.image(LGame).image priorSource: 412597!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:17' prior: 33975134!colocar_estrella: unaPosicion	| x aux|	x := unaPosicion.	aux := estrella.		(self analizar_casilla: x) addMorphCentered: aux.	! !Grafico removeSelector: #generar_estrella!Grafico removeSelector: #borrar_ficha_anterior:ficha:!!LGame methodsFor: 'accessing' stamp: 'Anonymous 11/12/2021 23:22' prior: 33972031!mover_ficha	|var var2 pos bool|	bool := true.	var := UIManager default confirm: 'Desea mover una ficha?' trueChoice: 'SI' falseChoice: 'NO'.		(var) ifTrue: [ 			var2 := UIManager default chooseFrom: #('6' '9') message: 'Que ficha desea mover?'.						(var2 = 0) ifTrue: [ ^'' ].					 	(var2 = 1) ifTrue: [  					[ bool ] whileTrue: [ 						pos := ficha_6 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_6 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_6 borrar_anterior: (ficha_6 pos_anterior) en: tablero.					ficha_6 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_6 valor).				]				ifFalse: [ 					[ bool ] whileTrue: [ 						pos := ficha_9 pedir_posicion.												(pos = true) ifTrue: [ ^'' ].												bool := ficha_9 movimiento: pos en: tablero.						Transcript show: 'No puede realizar ese movimiento.'; cr					].					ficha_9 borrar_anterior: (ficha_9 pos_anterior) en: tablero.					ficha_9 colocar: pos en: tablero ronda: ronda.					grafico pintar: pos ficha: (ficha_9 valor).				]		].! !Grafico removeSelector: #borrar_estrella:en:!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:22' prior: 33973687!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:27' prior: 33958663!generar_moneda	| rand fila columna bool|		((tablero indexOf: 5) = ((0@0) asPoint)) ifTrue: [ 		bool := true.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			grafico colocar_estrella: rand.			^''.		 ]		ifFalse: [ bool := true ]	]]! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:28'!generar_estrella	| rand fila columna bool|		((tablero indexOf: 5) = ((0@0) asPoint)) ifTrue: [ 		bool := true.	[ bool ] whileTrue: [ 	rand := 0.	(rand = 0) ifTrue: [ 			[ rand = 0 ] whileTrue: [				rand := Random new.				rand := (rand next) * 16.				rand := rand asInteger.			]		 ].	fila := (tablero rowAndColumnForIndex: rand) x.	columna := (tablero rowAndColumnForIndex: rand) y.		((tablero at: fila at: columna) = 0) ifTrue: [ 			tablero at: fila at: columna put: 5.			grafico colocar_estrella: rand.			^''.		 ]		ifFalse: [ bool := true ]	]]! !LGame removeSelector: #generar_moneda!!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:28' prior: 33965248!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].			((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].	self mover_ficha.		ronda := ronda + 1.		self generar_estrella.	"((ronda \\ 2) = 0) ifTrue:	[self generar_moneda]."	 ^true.! !----SNAPSHOT----2021-11-12T23:33:19.606408-03:00 Pharo7.2.5.image priorSource: 421796!!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:35'!borrar_estrella: unArray en: elTablero	| posiciones tablero aux_fila aux_col|	posiciones := unArray.	tablero := elTablero.	posiciones do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			((tablero at: aux_fila at: aux_col) = 5) ifTrue: [ (self analizar_casilla: s) removeMorph: estrella ]		].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/12/2021 23:36' prior: 33978048!movimiento_jugador: elTablero ronda: ronda en: grafico	| mov_jug mov tablero |		tablero := elTablero.	mov_jug := self pedir_movimiento.		((mov_jug = true) | (mov_jug = false)) ifTrue: [ 		(mov_jug) ifTrue: [ ^true ]					ifFalse: [ ^'cancelar' ].		]			ifFalse: [ 					mov := self posibles_movimientos includes: mov_jug.		(mov) & (mov_anterior ~= mov_jug) & (self superposicion: mov_jug en: tablero) ifTrue: [ 			Transcript clear.						self sumar_puntos: mov_jug en: tablero.			self borrar_anterior: mov_anterior en: tablero.			grafico borrar_estrella: mov_jug en: tablero.			grafico despintar: mov_anterior.			self posicionar: mov_jug en: tablero.			grafico pintar: mov_jug jugador: var_1_2.									Transcript show: 'Numero de ronda: '; show: ronda;  cr.			Transcript show: tablero; cr.			mov_anterior := mov_jug.			^false		 ]		ifFalse: [ 	Transcript show: 'No puede realizar ese movimiento.'; cr. ^true].	].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 00:07' prior: 33758814!analizar_inclusion: unNumero en: unArreglo		unNumero do: [ :w|				(unArreglo includes: w) ifFalse: [ ^0 ]			].		^1			! !----SNAPSHOT----2021-11-13T00:07:15.072865-03:00 Pharo7.2.5(L-Game).image priorSource: 427746!Object subclass: #LGame	instanceVariableNames: 'jugador1 jugador2 ficha_6 ficha_9 tablero ronda grafico'	classVariableNames: ''	package: 'TPI'!----SNAPSHOT----2021-11-13T00:45:21.440865-03:00 Pharo7.2.5(L-Game).image priorSource: 429540!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 17:54' prior: 33847814!posicionar: mov_jug en: tablero	| aux_fila aux_col |	mov_jug do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			tablero at: aux_fila at: aux_col put: var_1_2.		].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 17:54' prior: 33984408!posicionar: mov_jug en: tablero	| aux_fila aux_col |	mov_jug do: [:s|			aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			tablero at: aux_fila at: aux_col put: var_1_2.		].! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:00' prior: 33940285!superposicion: mov_jug en: tablero	|flag arr aux_fila aux_col|	flag := true.	(var_1_2 = 1) ifTrue: [ arr := #(2 6 9) ]					ifFalse: [ arr := #(1 6 9) ].		mov_jug do: [:s|				aux_fila := (tablero rowAndColumnForIndex: s) x.			aux_col := (tablero rowAndColumnForIndex: s) y.			(arr includes: (tablero at: aux_fila at: aux_col)) ifTrue: [ ^flag := false ]		].		^flag.! !!LGame methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:03' prior: 33980395!recibir_movimiento	| bool posibles_movimientos |	bool := true.		Transcript clear.	Transcript show: 'Numero de ronda: '; show: ronda; cr.	Transcript show: tablero.		posibles_movimientos := jugador1 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 1' title: 'GANA EL JUGADOR 2'. ^false].			UIManager default message: 'TURNO DEL JUGADOR 1'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador1.	Transcript cr.		[ bool ] whileTrue: [ 			bool := jugador1 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].			((jugador1 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 1 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 1'. ^false].		self mover_ficha.		posibles_movimientos := jugador2 analizar_posibles_mov: tablero.		(posibles_movimientos = 0) ifTrue: [ UIManager default message: '0 MOVIMIENTOS POSIBLES PARA EL JUGADOR 2' title: 'GANA EL JUGADOR 1'. ^false].		bool := true.	UIManager default message: 'TURNO DEL JUGADOR 2'.	self mensaje_posibles_movimientos: posibles_movimientos.	self mensaje_puntos: jugador2.	Transcript cr.	[ bool ] whileTrue: [ 			bool := jugador2 movimiento_jugador: tablero ronda: ronda en: grafico.			(bool = 'cancelar') ifTrue: [ 					UIManager default message: 'Juego cancelado'.					^false				 ]	 ].		((jugador2 puntos) = 5) ifTrue: [ UIManager default message: 'EL JUGADOR 2 HA CONSEGUIDO 5 PUNTOS' title: 'GANA EL JUGADOR 2'. ^false].	self mover_ficha.		ronda := ronda + 1.		self generar_estrella.	 ^true.! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:13' prior: 33763571!movimiento: unaPosicion en: tablero	" analiza los lugares vacios en el tablero "	| pos aux_fila aux_col|	pos := unaPosicion.				aux_fila := (tablero indexOf: pos) x.		aux_col := (tablero indexOf: pos) y.		((tablero at: aux_fila at: aux_col) = 0) ifTrue: [^false]															 ifFalse: [ ^true ].! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:14' prior: 33987368!movimiento: unaPosicion en: tablero	" analiza los lugares vacios en el tablero "	| pos aux_fila aux_col|	pos := unaPosicion.				aux_fila := (tablero rowAndColumnForIndex: pos) x.		aux_col := (tablero rowAndColumnForIndex: pos) y.		((tablero at: aux_fila at: aux_col) = 0) ifTrue: [^false]															 ifFalse: [ ^true ].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:22' prior: 33933305!despintar: unArray	| posiciones |		posiciones := unArray.		posiciones do: [:x|		(self analizar_casilla: x) color: Color white.				"(x = 1) ifTrue: [ c1 color: Color white ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: Color white ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: Color white ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: Color white ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: Color white ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: Color white ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: Color white ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: Color white ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: Color white ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: Color white ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: Color white ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: Color white ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: Color white ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: Color white ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: Color white ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: Color white ]].].].].].].].].].].].].].].]."].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:27' prior: 33988204!despintar: unArray	| posiciones |		posiciones := unArray.		posiciones do: [:x|		(self analizar_casilla: x) color: Color white.	].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:30' prior: 33934426!pintar: unaPosicion ficha: unaFicha	| x  una_ficha |	x := unaPosicion.		(unaFicha = 6) ifTrue: [ una_ficha := ficha6 ]						ifFalse: [ una_ficha := ficha9 ].	(self analizar_casilla: x) addMorphCentered: una_ficha.		"(x = 1) ifTrue: [ c1 addMorphCentered: unGrafico]		ifFalse: [		(x = 2) ifTrue: [ c2 addMorphCentered: unGrafico]		ifFalse:[		(x = 3) ifTrue: [ c3 addMorphCentered: unGrafico]		ifFalse:[		(x = 4) ifTrue: [ c4 addMorphCentered: unGrafico]		ifFalse:[		(x = 5) ifTrue: [ c5 addMorphCentered: unGrafico]		ifFalse:[		(x = 6) ifTrue: [ c6 addMorphCentered: unGrafico]		ifFalse:[		(x = 7) ifTrue: [ c7 addMorphCentered: unGrafico]		ifFalse:[		(x = 8) ifTrue: [ c8 addMorphCentered: unGrafico]		ifFalse:[		(x = 9) ifTrue: [ c9 addMorphCentered: unGrafico.]		ifFalse:[								(x = 10) ifTrue: [ c10 addMorphCentered: unGrafico]		ifFalse:[		(x = 11) ifTrue: [ c11 addMorphCentered: unGrafico]		ifFalse:[		(x = 12) ifTrue: [ c12 addMorphCentered: unGrafico]		ifFalse:[		(x = 13) ifTrue: [ c13 addMorphCentered: unGrafico]		ifFalse:[		(x = 14) ifTrue: [ c14 addMorphCentered: unGrafico]		ifFalse:[		(x = 15) ifTrue: [ c15 addMorphCentered: unGrafico]		ifFalse:[		(x = 16) ifTrue: [ c16 addMorphCentered: unGrafico]].].].].].].].].].].].].].].]."! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:34' prior: 33849275!pintar: unArray jugador: unEntero	| posiciones jugador elColor|	posiciones := unArray.	jugador := unEntero.	(jugador = 1) ifTrue: [ elColor := Color red ]					ifFalse: [ elColor := Color blue ].		posiciones do: [:x|				(self analizar_casilla: x) color: elColor.				"(x = 1) ifTrue: [ c1 color: elColor ]		ifFalse: [		(x = 2) ifTrue: [ c2 color: elColor ]		ifFalse:[		(x = 3) ifTrue: [ c3 color: elColor ]		ifFalse:[		(x = 4) ifTrue: [ c4 color: elColor ]		ifFalse:[		(x = 5) ifTrue: [ c5 color: elColor ]		ifFalse:[		(x = 6) ifTrue: [ c6 color: elColor ]		ifFalse:[		(x = 7) ifTrue: [ c7 color: elColor ]		ifFalse:[		(x = 8) ifTrue: [ c8 color: elColor ]		ifFalse:[		(x = 9) ifTrue: [ c9 color: elColor ]		ifFalse:[								(x = 10) ifTrue: [ c10 color: elColor ]		ifFalse:[		(x = 11) ifTrue: [ c11 color: elColor ]		ifFalse:[		(x = 12) ifTrue: [ c12 color: elColor ]		ifFalse:[		(x = 13) ifTrue: [ c13 color: elColor ]		ifFalse:[		(x = 14) ifTrue: [ c14 color: elColor ]		ifFalse:[		(x = 15) ifTrue: [ c15 color: elColor ]		ifFalse:[		(x = 16) ifTrue: [ c16 color: elColor ]].].].].].].].].].].].].].].]."].! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:41' prior: 33989617!pintar: unaPosicion ficha: unaFicha	| x  una_ficha |	x := unaPosicion.		(unaFicha = 6) ifTrue: [ una_ficha := ficha6 ]						ifFalse: [ una_ficha := ficha9 ].	(self analizar_casilla: x) addMorphCentered: una_ficha.! !!Grafico methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/13/2021 18:42' prior: 33991007!pintar: unArray jugador: unEntero	| posiciones jugador elColor|	posiciones := unArray.	jugador := unEntero.	(jugador = 1) ifTrue: [ elColor := Color red ]					ifFalse: [ elColor := Color blue ].		posiciones do: [:x|				(self analizar_casilla: x) color: elColor.	].! !----SNAPSHOT----2021-11-13T18:43:41.312951-03:00 Pharo7.2.5(L-Game).image priorSource: 429784!----SNAPSHOT----2021-11-13T19:23:56.555916-03:00 Pharo7.2.5(L-Game).image priorSource: 438425!!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/14/2021 16:07' prior: 33654962!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].	1 to: 4 do: [:i|		(((aux at: i) asInteger) > 16) ifTrue:  [ ^false ].		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/14/2021 16:09' prior: 33993145!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].	1 to: 4 do: [:i|		(((aux at: i) asInteger) > 16) ifTrue:  [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].		arreglo_movimiento at: i put: (aux at: i) asInteger	 ].	^arreglo_movimiento! !!Ficha methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/14/2021 16:21' prior: 33811174!pedir_posicion		| pos |	pos := ''.	[ pos isNumber ] whileFalse: [ 		pos := UIManager default request: 'Ingrese la posicion'.		pos ifNil: [ ^true ].		(pos isAllDigits) ifTrue: [ 										((pos asNumber) <= 16) ifTrue: [pos := pos asNumber ]															ifFalse: [ Transcript show: 'Error. Ingrese nuevamente'; cr]									]								ifFalse: [ Transcript show: 'Intente nuevamente. Debe ingresar un numero.'; cr]	 ].	^pos! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/14/2021 16:25' prior: 33993620!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].	1 to: 4 do: [:i|		(((aux at: i) asInteger) between: 1 and: 16) ifTrue: [ arreglo_movimiento at: i put: (aux at: i) asInteger ]					ifFalse: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false ]				"(((aux at: i) asInteger) > 16) ifTrue:  [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].		arreglo_movimiento at: i put: (aux at: i) asInteger"	 ].	^arreglo_movimiento! !!PiezaL methodsFor: 'as yet unclassified' stamp: 'Anonymous 11/14/2021 16:26' prior: 33994690!conversion_string: unString	| aux arreglo_movimiento |	arreglo_movimiento := Array new: 4.	aux := unString substrings.	(aux size ~= 4) ifTrue: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false].	1 to: 4 do: [:i|		(((aux at: i) asInteger) between: 1 and: 16) ifTrue: [ arreglo_movimiento at: i put: (aux at: i) asInteger ]					ifFalse: [ Transcript show: 'Movimiento invalido, ingrese nuevamente'; cr. ^false ]	 ].	^arreglo_movimiento! !----SNAPSHOT----2021-11-14T16:27:07.633809-03:00 Pharo7.2.5(L-Game).image priorSource: 438521!----SNAPSHOT----2021-11-14T18:24:01.074732-03:00 Pharo7.2.5(L-Game).image priorSource: 441472!